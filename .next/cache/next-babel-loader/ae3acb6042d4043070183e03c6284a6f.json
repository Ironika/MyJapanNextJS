{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/kevhoque/Documents/MyTest/myJapan/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Link from 'next/link.js';\nimport { ParallaxProvider } from 'react-scroll-parallax';\nimport { ParallaxBanner } from 'react-scroll-parallax';\nimport { getApiNews } from '../helpers/News';\nimport { dateDiff } from '../helpers/Shared';\nimport LazyLoad from 'react-lazyload';\nimport Loader from '../components/Loader/Loader';\nimport Card from '../components/News/Card';\nimport FlipCard from '../components/Home/FlipCard/FlipCard';\nimport PresentationVF from '../components/Home/Presentation/PresentationVF';\nimport PresentationVA from '../components/Home/Presentation/PresentationVA';\nimport DescriptionVF from '../components/Home/Description/DescriptionVF';\nimport DescriptionVA from '../components/Home/Description/DescriptionVA';\nimport banner from '../public/img/banner.jpg';\nimport homescreen from '../public/img/homescreen.jpg';\nimport homescreen2 from '../public/img/homescreen2.jpg';\nimport homescreen3 from '../public/img/homescreen3.jpg';\n\nvar Index = function Index(props) {\n  var _useState = useState(props.news || []),\n      news = _useState[0],\n      setNews = _useState[1];\n\n  var _useState2 = useState(true),\n      loader = _useState2[0],\n      setLoader = _useState2[1];\n\n  useEffect(function () {\n    var fetchDatas = function fetchDatas() {\n      var _news;\n\n      return _regeneratorRuntime.async(function fetchDatas$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(getNews());\n\n            case 2:\n              _news = _context.sent;\n              _news.length = 4;\n              setNews(_news);\n              setLoader(false);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    };\n\n    fetchDatas();\n  }, []);\n  return __jsx(\"div\", {\n    className: \"Home\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, __jsx(ParallaxProvider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, __jsx(ParallaxBanner, {\n    className: \"homescreen banner\",\n    layers: [{\n      image: banner,\n      amount: 0.5\n    }],\n    style: {\n      height: '300px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"HOME\")), __jsx(FlipCard, {\n    front: __jsx(PresentationVF, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }),\n    back: __jsx(PresentationVA, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), __jsx(LazyLoad, {\n    placeholder: __jsx(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, __jsx(ParallaxBanner, {\n    className: \"homescreen\",\n    layers: [{\n      image: homescreen2,\n      amount: 0.5\n    }],\n    style: {\n      height: '450px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })), __jsx(FlipCard, {\n    front: __jsx(DescriptionVF, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }),\n    back: __jsx(DescriptionVA, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), __jsx(LazyLoad, {\n    placeholder: __jsx(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, __jsx(ParallaxBanner, {\n    className: \"homescreen\",\n    layers: [{\n      image: homescreen3,\n      amount: 0.5\n    }],\n    style: {\n      height: '450px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })), __jsx(\"section\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"news\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Last News\"), __jsx(\"div\", {\n    className: \"card-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, loader ? __jsx(Loader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }) : news.map(function (item, index) {\n    return __jsx(Card, {\n      key: index,\n      news: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    });\n  })), __jsx(\"div\", {\n    className: \"cta\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: '/news',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Voir plus\"))))), __jsx(LazyLoad, {\n    placeholder: __jsx(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, __jsx(ParallaxBanner, {\n    className: \"homescreen\",\n    layers: [{\n      image: homescreen,\n      amount: 0.5\n    }],\n    style: {\n      height: '450px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }))));\n};\n\nIndex.getInitialProps = function _callee(context) {\n  var news;\n  return _regeneratorRuntime.async(function _callee$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          if (!context.req) {\n            _context2.next = 3;\n            break;\n          }\n\n          news = getApiNews();\n          return _context2.abrupt(\"return\", {\n            news: news\n          });\n\n        case 3:\n          return _context2.abrupt(\"return\", {});\n\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  });\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/kevhoque/Documents/MyTest/myJapan/pages/index.js"],"names":["React","useState","useEffect","Link","ParallaxProvider","ParallaxBanner","getApiNews","dateDiff","LazyLoad","Loader","Card","FlipCard","PresentationVF","PresentationVA","DescriptionVF","DescriptionVA","banner","homescreen","homescreen2","homescreen3","Index","props","news","setNews","loader","setLoader","fetchDatas","getNews","_news","length","image","amount","height","map","item","index","getInitialProps","context","req"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Link from 'next/link.js';\n\nimport { ParallaxProvider } from 'react-scroll-parallax';\nimport { ParallaxBanner } from 'react-scroll-parallax';\nimport { getApiNews } from '../helpers/News'\nimport { dateDiff } from '../helpers/Shared'\nimport LazyLoad from 'react-lazyload';\nimport Loader from '../components/Loader/Loader'\nimport Card from '../components/News/Card'\nimport FlipCard from '../components/Home/FlipCard/FlipCard'\nimport PresentationVF from '../components/Home/Presentation/PresentationVF'\nimport PresentationVA from '../components/Home/Presentation/PresentationVA'\nimport DescriptionVF from '../components/Home/Description/DescriptionVF'\nimport DescriptionVA from '../components/Home/Description/DescriptionVA'\n\nimport banner from '../public/img/banner.jpg'\nimport homescreen from '../public/img/homescreen.jpg'\nimport homescreen2 from '../public/img/homescreen2.jpg'\nimport homescreen3 from '../public/img/homescreen3.jpg'\n\nconst Index = (props) => {\n    const [news, setNews] = useState(props.news || []);\n    const [loader, setLoader] = useState(true);\n\n    useEffect(() => {\n      const fetchDatas = async () => {\n        let _news = await getNews()\n        _news.length = 4\n        setNews(_news)\n        setLoader(false)\n      }\n\n      fetchDatas()\n    }, []);\n\n    return (\n      <div className=\"Home\">\n\n        <ParallaxProvider>\n          <ParallaxBanner className=\"homescreen banner\" layers={[{ image: banner, amount: 0.5 }]} style={{ height: '300px' }}>\n            <h1 className=\"title\">HOME</h1>\n          </ParallaxBanner>\n          <FlipCard front={<PresentationVF />} back={<PresentationVA />} />\n          <LazyLoad placeholder={<Loader />}>\n            <ParallaxBanner className=\"homescreen\" layers={[{ image: homescreen2, amount: 0.5 }]} style={{ height: '450px' }}></ParallaxBanner>\n          </LazyLoad>\n          <FlipCard front={<DescriptionVF />} back={<DescriptionVA />} />\n          <LazyLoad placeholder={<Loader />}>\n            <ParallaxBanner className=\"homescreen\" layers={[{ image: homescreen3, amount: 0.5 }]} style={{ height: '450px' }}></ParallaxBanner>\n          </LazyLoad>\n          <section>\n            <div className=\"news\">\n              <h2>Last News</h2>\n              <div className=\"card-container\">\n                {loader ? <Loader /> :\n                  news.map((item, index) =>\n                    <Card key={index} news={item} />\n                  )\n                }\n              </div>\n              <div className=\"cta\">\n                <Link href={'/news'}><a>Voir plus</a></Link>\n              </div>\n            </div>\n            </section>\n          <LazyLoad placeholder={<Loader />}>\n            <ParallaxBanner className=\"homescreen\" layers={[{ image: homescreen, amount: 0.5 }]} style={{ height: '450px' }}></ParallaxBanner>\n          </LazyLoad>\n        </ParallaxProvider>\n\n      </div>\n    );\n  }\n\nIndex.getInitialProps = async (context) => {\n    if(context.req) {\n        const news = getApiNews();\n        return {news}\n    }\n    return {}\n}\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}