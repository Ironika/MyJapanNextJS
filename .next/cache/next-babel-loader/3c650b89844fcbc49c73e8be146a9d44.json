{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/Users/kevhoque/Documents/MyTest/myJapan/pages/scans.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport debounce from \"lodash.debounce\";\nimport LazyLoad from 'react-lazyload';\nimport { ParallaxProvider } from 'react-scroll-parallax';\nimport { ParallaxBanner } from 'react-scroll-parallax';\nimport { getScans, getScansVA } from '../helpers/Scans';\nimport { dateDiff } from '../helpers/Shared';\nimport Loader from '../components/Loader/Loader';\nimport CardVa from '../components/Scans/CardVa';\nimport Card from '../components/Scans/Card';\nimport banner from '../public/img/banner.jpg';\n\nvar Scans = function Scans() {\n  var pageToDisplay = 12;\n\n  var _useState = useState(12),\n      nbToDisplay = _useState[0],\n      setNbToDisplay = _useState[1];\n\n  var _useState2 = useState([]),\n      scans = _useState2[0],\n      setScans = _useState2[1];\n\n  var _useState3 = useState([]),\n      scansVa = _useState3[0],\n      setScansVa = _useState3[1];\n\n  var _useState4 = useState([]),\n      displayedScansVa = _useState4[0],\n      setDisplayedScansVa = _useState4[1];\n\n  var _useState5 = useState(true),\n      hasMore = _useState5[0],\n      setHasMore = _useState5[1];\n\n  var _useState6 = useState(true),\n      loader = _useState6[0],\n      setLoader = _useState6[1];\n\n  var _useState7 = useState(true),\n      loaderVa = _useState7[0],\n      setLoaderVa = _useState7[1];\n\n  var _useState8 = useState(false),\n      deepLoader = _useState8[0],\n      setDeepLoader = _useState8[1];\n\n  useEffect(function () {\n    window.onscroll = debounce(function () {\n      if (!hasMore) return;\n      var scroll = window.innerHeight + document.documentElement.scrollTop;\n      if (scroll === document.documentElement.offsetHeight) loadItems();\n    }, 100);\n  }, [displayedScansVa]);\n  useEffect(function () {\n    var fetchScans = function fetchScans() {\n      var currentScans;\n      return _regeneratorRuntime.async(function fetchScans$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.t0 = _toConsumableArray;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(getScans());\n\n            case 3:\n              _context.t1 = _context.sent;\n              currentScans = (0, _context.t0)(_context.t1);\n              setScans(currentScans);\n              setLoader(false);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    };\n\n    var fetchScansVa = function fetchScansVa(flag) {\n      var currentScansVa;\n      return _regeneratorRuntime.async(function fetchScansVa$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.t0 = _toConsumableArray;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(getScansVA());\n\n            case 3:\n              _context2.t1 = _context2.sent;\n              currentScansVa = (0, _context2.t0)(_context2.t1);\n              setScansVa(currentScansVa);\n              setDisplayedScansVa(currentScansVa.slice(0, nbToDisplay));\n              setLoaderVa(false);\n\n              if (flag) {\n                setHasMore(true);\n                setDeepLoader(false);\n              }\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    };\n\n    var cache = JSON.parse(localStorage.getItem('cache'));\n\n    if (cache.scans) {\n      var currentScans = cache.scans;\n      setScans(currentScans);\n      setLoader(false);\n      if (dateDiff(new Date(cache.scansDate), new Date()).min > 10) fetchScans();\n    } else {\n      fetchScans();\n    }\n\n    if (cache.scansVa) {\n      var currentScansVa = cache.scansVa;\n      setScansVa(currentScansVa);\n      setDisplayedScansVa(currentScansVa.slice(0, pageToDisplay));\n      setLoaderVa(false);\n\n      if (dateDiff(new Date(cache.scansVaDate), new Date()).min > 10) {\n        fetchScansVa(true);\n        setDeepLoader(true);\n      }\n    } else {\n      fetchScansVa();\n    }\n  }, [deepLoader, nbToDisplay]);\n\n  var loadItems = function loadItems() {\n    var currentNbToDisplay = displayedScansVa.length + pageToDisplay;\n\n    if (currentNbToDisplay > scansVa.length) {\n      currentNbToDisplay = scansVa.length;\n      setHasMore(false);\n    }\n\n    setNbToDisplay(currentNbToDisplay);\n    setDisplayedScansVa(scansVa.slice(0, currentNbToDisplay));\n  };\n\n  return __jsx(\"div\", {\n    className: \"Scans\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, __jsx(ParallaxProvider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, __jsx(ParallaxBanner, {\n    className: \"homescreen banner\",\n    layers: [{\n      image: banner,\n      amount: 0.5\n    }],\n    style: {\n      height: '300px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"SCANS\")), __jsx(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"card-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, loader ? __jsx(Loader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }) : scans.map(function (item, index) {\n    return __jsx(LazyLoad, {\n      key: index,\n      placeholder: __jsx(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, __jsx(Card, {\n      news: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }));\n  }))), __jsx(\"div\", {\n    className: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, deepLoader && __jsx(Loader, {\n    style: {\n      marginTop: '20px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"card-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, loaderVa ? __jsx(Loader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }) : displayedScansVa.map(function (item, index) {\n    return __jsx(LazyLoad, {\n      key: index,\n      placeholder: __jsx(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, __jsx(CardVa, {\n      item: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }));\n  }))))));\n};\n\nexport default Scans;","map":{"version":3,"sources":["/Users/kevhoque/Documents/MyTest/myJapan/pages/scans.js"],"names":["React","useState","useEffect","debounce","LazyLoad","ParallaxProvider","ParallaxBanner","getScans","getScansVA","dateDiff","Loader","CardVa","Card","banner","Scans","pageToDisplay","nbToDisplay","setNbToDisplay","scans","setScans","scansVa","setScansVa","displayedScansVa","setDisplayedScansVa","hasMore","setHasMore","loader","setLoader","loaderVa","setLoaderVa","deepLoader","setDeepLoader","window","onscroll","scroll","innerHeight","document","documentElement","scrollTop","offsetHeight","loadItems","fetchScans","currentScans","fetchScansVa","flag","currentScansVa","slice","cache","JSON","parse","localStorage","getItem","Date","scansDate","min","scansVaDate","currentNbToDisplay","length","image","amount","height","map","item","index","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport debounce from \"lodash.debounce\";\nimport LazyLoad from 'react-lazyload';\nimport { ParallaxProvider } from 'react-scroll-parallax';\nimport { ParallaxBanner } from 'react-scroll-parallax';\nimport { getScans, getScansVA } from '../helpers/Scans'\nimport { dateDiff } from '../helpers/Shared'\nimport Loader from '../components/Loader/Loader'\nimport CardVa from '../components/Scans/CardVa'\nimport Card from '../components/Scans/Card'\nimport banner from '../public/img/banner.jpg'\n\nconst Scans = () => {\n    const pageToDisplay = 12\n    const [nbToDisplay, setNbToDisplay] = useState(12)\n    const [scans, setScans] = useState([])\n    const [scansVa, setScansVa] = useState([])\n    const [displayedScansVa, setDisplayedScansVa] = useState([])\n    const [hasMore, setHasMore] = useState(true)\n    const [loader, setLoader] = useState(true)\n    const [loaderVa, setLoaderVa] = useState(true)\n    const [deepLoader, setDeepLoader] = useState(false)\n\n    useEffect(() => {\n        window.onscroll = debounce(() => {\n            if (!hasMore) return\n            let scroll = window.innerHeight + document.documentElement.scrollTop\n            if (scroll === document.documentElement.offsetHeight)\n                loadItems()\n        }, 100);\n    }, [displayedScansVa])\n\n    useEffect(() => {\n        const fetchScans = async () => {\n            const currentScans = [...await getScans()]\n            setScans(currentScans)\n            setLoader(false)\n        }\n        const fetchScansVa = async (flag) => {\n            const currentScansVa = [...await getScansVA()]\n            setScansVa(currentScansVa)\n            setDisplayedScansVa(currentScansVa.slice(0, nbToDisplay))\n            setLoaderVa(false)\n            if (flag) {\n                setHasMore(true)\n                setDeepLoader(false)\n            }\n        }\n\n        const cache = JSON.parse(localStorage.getItem('cache'))\n        if (cache.scans) {\n            const currentScans = cache.scans\n            setScans(currentScans)\n            setLoader(false)\n            if (dateDiff(new Date(cache.scansDate), new Date()).min > 10)\n                fetchScans()\n        } else {\n            fetchScans()\n        }\n\n        if (cache.scansVa) {\n            const currentScansVa = cache.scansVa\n            setScansVa(currentScansVa)\n            setDisplayedScansVa(currentScansVa.slice(0, pageToDisplay))\n            setLoaderVa(false)\n            if (dateDiff(new Date(cache.scansVaDate), new Date()).min > 10) {\n                fetchScansVa(true)\n                setDeepLoader(true)\n            }\n        } else {\n            fetchScansVa()\n        }\n\n    }, [deepLoader, nbToDisplay]);\n\n    const loadItems = () => {\n        let currentNbToDisplay = displayedScansVa.length + pageToDisplay\n        if (currentNbToDisplay > scansVa.length) {\n            currentNbToDisplay = scansVa.length\n            setHasMore(false)\n        }\n        setNbToDisplay(currentNbToDisplay)\n        setDisplayedScansVa(scansVa.slice(0, currentNbToDisplay))\n    }\n\n    return (\n        <div className=\"Scans\">\n            <ParallaxProvider>\n                <ParallaxBanner className=\"homescreen banner\" layers={[{ image: banner, amount: 0.5 }]} style={{ height: '300px' }}>\n                    <h1 className=\"title\">SCANS</h1>\n                </ParallaxBanner>\n                <div className=\"container\">\n                    <div className=\"left\">\n                        <div className=\"card-container\">\n                            {loader ? <Loader /> :\n                                scans.map((item, index) =>\n                                    <LazyLoad key={index} placeholder={<Loader />}>\n                                        <Card news={item} />\n                                    </LazyLoad>\n                                )\n                            }\n                        </div>\n                    </div>\n                    <div className=\"right\">\n                        {deepLoader && <Loader style={{ marginTop: '20px' }} />}\n                        <div className=\"card-container\">\n                            {loaderVa ? <Loader /> :\n                                displayedScansVa.map((item, index) =>\n                                    <LazyLoad key={index} placeholder={<Loader />}>\n                                        <CardVa item={item} />\n                                    </LazyLoad>\n                                )\n                            }\n                        </div>\n                    </div>\n                </div>\n            </ParallaxProvider>\n        </div>\n    );\n}\n\nexport default Scans;\n"]},"metadata":{},"sourceType":"module"}