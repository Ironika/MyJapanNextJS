{"version":3,"file":"static/webpack/static/development/pages/index.js.e4333cad12b763a4897e.hot-update.js","sources":["webpack:///./helpers/News.js"],"sourcesContent":["\nimport { ADALA, NAUTIJON, MANGASNEWS } from '../rss';\nimport adala from '../public/img/adala.png';\nimport { fetchRss } from './Shared'\nimport Axios from 'axios';\nimport { API } from '../api'\n\nexport const getApiNews = async() => {\n    try {\n        const {data } = await Axios.get(`${API}/api/news`)\n        return data\n    } catch(e) {\n        console.log(e)\n    }\n\n    return []\n}\n\nexport const getNews = async () => {\n    let news = []\n    let adala = await getAdalaNews()\n    let nautijon = await getNautijonNews()\n    let mangasNews = await getMangasNews()\n\n    news = news.concat(adala, nautijon, mangasNews)\n\n    news.sort((a, b) => new Date(b.pubDate) - new Date(a.pubDate))\n\n    let cache = JSON.parse(localStorage.getItem('cache'))\n    cache.news = news\n    cache.newsDate = new Date()\n    localStorage.setItem('cache', JSON.stringify(cache))\n\n    return news\n}\n\nconst getAdalaNews = async () => {\n    let json = await fetchRss(ADALA)\n    let datas = formatJsonAdala(json)\n    return datas\n}\n\nconst getNautijonNews = async () => {\n    let json = await fetchRss(NAUTIJON)\n    let datas = formatJsonNautijon(json)\n    return datas\n}\n\nconst getMangasNews = async () => {\n    let json = await fetchRss(MANGASNEWS)\n    let datas = formatJsonMangasNews(json)\n    return datas\n}\n\nconst formatJsonAdala = (json) => {\n    let array = []\n    const items = json.rss.channel.item\n    for(var i = 0; i < items.length; i++) {\n        let item = {\n            title: items[i].title['_text'],\n            desc: items[i].description['_cdata'],\n            link: items[i].link['_text'],\n            pubDate: items[i].pubDate['_text'],\n            category: items[i].category[0]['_cdata'],\n            site: 'Adala-news',\n            img: adala\n        }\n        array.push(item)\n    }\n    return array\n}\n\nconst formatJsonNautijon = (json) => {\n    let array = []\n    const items = json.rss.channel.item\n    for(var i = 0; i < items.length; i++) {\n        const desc = items[i].description['_cdata'].split('<br />')\n        const src = desc[0].match('(https.*.jpg)')\n        let item = {\n            title: items[i].title['_text'],\n            desc: desc[1],\n            link: items[i].link['_text'],\n            pubDate: items[i].pubDate['_text'],\n            site: 'Nautijon',\n            img: src[0]\n        }\n        array.push(item)\n    }\n    return array\n}\n\nconst formatJsonMangasNews = (json) => {\n    let array = []\n    const items = json.rss.channel.item\n    for(var i = 0; i < items.length; i++) {\n        const desc = items[i].description['_cdata'].split('<p>')\n        const src = desc[0].match('(https.*.jpg)')\n        let item = {\n            title: items[i].title['_text'],\n            desc: desc[1].replace('</p>', ''),\n            link: items[i].link['_text'],\n            pubDate: items[i].pubDate['_text'],\n            site: 'Mangas-News',\n            img: src ? src[0] : adala\n        }\n        array.push(item)\n    }\n    return array\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAEA;AAFA;AACA;AADA;AAAA;AAAA;AAKA;AACA;AANA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAEA;AAFA;AAAA;AACA;AADA;AAGA;AAHA;AAAA;AACA;AADA;AAIA;AAEA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAbA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AACA;AAFA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AACA;AAFA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AACA;AAFA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AAAA;AACA;;;;A","sourceRoot":""}