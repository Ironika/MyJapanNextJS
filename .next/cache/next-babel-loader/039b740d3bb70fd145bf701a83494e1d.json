{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/kevhoque/Documents/MyTest/myJapan/pages/scans.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport debounce from \"lodash.debounce\";\nimport LazyLoad from 'react-lazyload';\nimport { ParallaxProvider } from 'react-scroll-parallax';\nimport { ParallaxBanner } from 'react-scroll-parallax';\nimport { getApiScans, getApiScansVA } from '../helpers/Scans';\nimport Loader from '../components/Loader/Loader';\nimport CardVa from '../components/Scans/CardVa';\nimport Card from '../components/Scans/Card';\nimport banner from '../public/img/banner.jpg';\n\nvar Scans = function Scans(props) {\n  var pageToDisplay = 12;\n\n  var _useState = useState(12),\n      nbToDisplay = _useState[0],\n      setNbToDisplay = _useState[1];\n\n  var _useState2 = useState(props.scans || []),\n      scans = _useState2[0],\n      setScans = _useState2[1];\n\n  var _useState3 = useState(props.scansVa || []),\n      scansVa = _useState3[0],\n      setScansVa = _useState3[1];\n\n  var _useState4 = useState([]),\n      displayedScansVa = _useState4[0],\n      setDisplayedScansVa = _useState4[1];\n\n  var _useState5 = useState(true),\n      hasMore = _useState5[0],\n      setHasMore = _useState5[1];\n\n  var _useState6 = useState(true),\n      loader = _useState6[0],\n      setLoader = _useState6[1];\n\n  var _useState7 = useState(true),\n      loaderVa = _useState7[0],\n      setLoaderVa = _useState7[1];\n\n  var _useState8 = useState(false),\n      deepLoader = _useState8[0],\n      setDeepLoader = _useState8[1];\n\n  useEffect(function () {\n    window.onscroll = debounce(function () {\n      if (!hasMore) return;\n      var scroll = window.innerHeight + document.documentElement.scrollTop;\n      if (scroll === document.documentElement.offsetHeight) loadItems();\n    }, 100);\n  }, [displayedScansVa]);\n  useEffect(function () {\n    var fetchScans = function fetchScans() {\n      var currentScans;\n      return _regeneratorRuntime.async(function fetchScans$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(getApiScans());\n\n            case 2:\n              currentScans = _context.sent;\n              setScans(currentScans);\n              setLoader(false);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    };\n\n    var fetchScansVa = function fetchScansVa(flag) {\n      var currentScansVa;\n      return _regeneratorRuntime.async(function fetchScansVa$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(getApiScansVA());\n\n            case 2:\n              currentScansVa = _context2.sent;\n              setScansVa(currentScansVa);\n              setDisplayedScansVa(currentScansVa.slice(0, nbToDisplay));\n              setLoaderVa(false);\n\n              if (flag) {\n                setHasMore(true);\n                setDeepLoader(false);\n              }\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    };\n\n    fetchScans();\n    fetchScansVa();\n  }, [deepLoader, nbToDisplay]);\n\n  var loadItems = function loadItems() {\n    var currentNbToDisplay = displayedScansVa.length + pageToDisplay;\n\n    if (currentNbToDisplay > scansVa.length) {\n      currentNbToDisplay = scansVa.length;\n      setHasMore(false);\n    }\n\n    setNbToDisplay(currentNbToDisplay);\n    setDisplayedScansVa(scansVa.slice(0, currentNbToDisplay));\n  };\n\n  return __jsx(\"div\", {\n    className: \"Scans\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, __jsx(ParallaxProvider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, __jsx(ParallaxBanner, {\n    className: \"homescreen banner\",\n    layers: [{\n      image: banner,\n      amount: 0.5\n    }],\n    style: {\n      height: '300px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"SCANS\")), __jsx(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"card-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, loader ? __jsx(Loader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }) : scans.map(function (item, index) {\n    return __jsx(LazyLoad, {\n      key: index,\n      placeholder: __jsx(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, __jsx(Card, {\n      news: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }));\n  }))), __jsx(\"div\", {\n    className: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, deepLoader && __jsx(Loader, {\n    style: {\n      marginTop: '20px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"card-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, loaderVa ? __jsx(Loader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }) : displayedScansVa.map(function (item, index) {\n    return __jsx(LazyLoad, {\n      key: index,\n      placeholder: __jsx(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, __jsx(CardVa, {\n      item: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }));\n  }))))));\n};\n\nScans.getInitialProps = function _callee(_ref) {\n  var req, scans, scansVa;\n  return _regeneratorRuntime.async(function _callee$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          req = _ref.req;\n\n          if (!req) {\n            _context3.next = 9;\n            break;\n          }\n\n          _context3.next = 4;\n          return _regeneratorRuntime.awrap(getApiScans());\n\n        case 4:\n          scans = _context3.sent;\n          _context3.next = 7;\n          return _regeneratorRuntime.awrap(getApiScansVA());\n\n        case 7:\n          scansVa = _context3.sent;\n          return _context3.abrupt(\"return\", {\n            scans: scans,\n            scansVa: scansVa\n          });\n\n        case 9:\n          return _context3.abrupt(\"return\", {});\n\n        case 10:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  });\n};\n\nexport default Scans;","map":{"version":3,"sources":["/Users/kevhoque/Documents/MyTest/myJapan/pages/scans.js"],"names":["React","useState","useEffect","debounce","LazyLoad","ParallaxProvider","ParallaxBanner","getApiScans","getApiScansVA","Loader","CardVa","Card","banner","Scans","props","pageToDisplay","nbToDisplay","setNbToDisplay","scans","setScans","scansVa","setScansVa","displayedScansVa","setDisplayedScansVa","hasMore","setHasMore","loader","setLoader","loaderVa","setLoaderVa","deepLoader","setDeepLoader","window","onscroll","scroll","innerHeight","document","documentElement","scrollTop","offsetHeight","loadItems","fetchScans","currentScans","fetchScansVa","flag","currentScansVa","slice","currentNbToDisplay","length","image","amount","height","map","item","index","marginTop","getInitialProps","req"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport debounce from \"lodash.debounce\";\nimport LazyLoad from 'react-lazyload';\nimport { ParallaxProvider } from 'react-scroll-parallax';\nimport { ParallaxBanner } from 'react-scroll-parallax';\nimport { getApiScans, getApiScansVA } from '../helpers/Scans'\nimport Loader from '../components/Loader/Loader'\nimport CardVa from '../components/Scans/CardVa'\nimport Card from '../components/Scans/Card'\nimport banner from '../public/img/banner.jpg'\n\nconst Scans = (props) => {\n    const pageToDisplay = 12\n    const [nbToDisplay, setNbToDisplay] = useState(12)\n    const [scans, setScans] = useState(props.scans || [])\n    const [scansVa, setScansVa] = useState(props.scansVa || [])\n    const [displayedScansVa, setDisplayedScansVa] = useState([])\n    const [hasMore, setHasMore] = useState(true)\n    const [loader, setLoader] = useState(true)\n    const [loaderVa, setLoaderVa] = useState(true)\n    const [deepLoader, setDeepLoader] = useState(false)\n\n    useEffect(() => {\n        window.onscroll = debounce(() => {\n            if (!hasMore) return\n            let scroll = window.innerHeight + document.documentElement.scrollTop\n            if (scroll === document.documentElement.offsetHeight)\n                loadItems()\n        }, 100);\n    }, [displayedScansVa])\n\n    useEffect(() => {\n        const fetchScans = async () => {\n            const currentScans = await getApiScans()\n            setScans(currentScans)\n            setLoader(false)\n        }\n        const fetchScansVa = async (flag) => {\n            const currentScansVa = await getApiScansVA()\n            setScansVa(currentScansVa)\n            setDisplayedScansVa(currentScansVa.slice(0, nbToDisplay))\n            setLoaderVa(false)\n            if (flag) {\n                setHasMore(true)\n                setDeepLoader(false)\n            }\n        }\n\n        fetchScans()\n        fetchScansVa()\n\n    }, [deepLoader, nbToDisplay]);\n\n    const loadItems = () => {\n        let currentNbToDisplay = displayedScansVa.length + pageToDisplay\n        if (currentNbToDisplay > scansVa.length) {\n            currentNbToDisplay = scansVa.length\n            setHasMore(false)\n        }\n        setNbToDisplay(currentNbToDisplay)\n        setDisplayedScansVa(scansVa.slice(0, currentNbToDisplay))\n    }\n\n    return (\n        <div className=\"Scans\">\n            <ParallaxProvider>\n                <ParallaxBanner className=\"homescreen banner\" layers={[{ image: banner, amount: 0.5 }]} style={{ height: '300px' }}>\n                    <h1 className=\"title\">SCANS</h1>\n                </ParallaxBanner>\n                <div className=\"container\">\n                    <div className=\"left\">\n                        <div className=\"card-container\">\n                            {loader ? <Loader /> :\n                                scans.map((item, index) =>\n                                    <LazyLoad key={index} placeholder={<Loader />}>\n                                        <Card news={item} />\n                                    </LazyLoad>\n                                )\n                            }\n                        </div>\n                    </div>\n                    <div className=\"right\">\n                        {deepLoader && <Loader style={{ marginTop: '20px' }} />}\n                        <div className=\"card-container\">\n                            {loaderVa ? <Loader /> :\n                                displayedScansVa.map((item, index) =>\n                                    <LazyLoad key={index} placeholder={<Loader />}>\n                                        <CardVa item={item} />\n                                    </LazyLoad>\n                                )\n                            }\n                        </div>\n                    </div>\n                </div>\n            </ParallaxProvider>\n        </div>\n    );\n}\n\nScans.getInitialProps = async ({req}) => {\n    if(req) {\n        const scans = await getApiScans();\n        const scansVa = await getApiScansVA();\n        return {scans, scansVa}\n    }\n    return {}\n}\n\nexport default Scans;\n"]},"metadata":{},"sourceType":"module"}