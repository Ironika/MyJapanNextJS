{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport { fetchRss, isInList } from './Shared';\nimport { SCANTRAD, MANGAFOX } from '../rss';\nimport Axios from 'axios';\nexport var getScans = function getScans() {\n  var scans, scantrad, cache;\n  return _regeneratorRuntime.async(function getScans$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          scans = [];\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(getScantrad());\n\n        case 3:\n          scantrad = _context.sent;\n          scans = scans.concat(scantrad);\n          scans.sort(function (a, b) {\n            return new Date(b.pubDate) - new Date(a.pubDate);\n          });\n          cache = JSON.parse(localStorage.getItem('cache'));\n          cache.scans = scans;\n          cache.scansDate = new Date();\n          localStorage.setItem('cache', _JSON$stringify(cache));\n          return _context.abrupt(\"return\", scans);\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\nexport var getScansVA = function getScansVA() {\n  var scansVa, mangaFox, cache;\n  return _regeneratorRuntime.async(function getScansVA$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          scansVa = [];\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(getMangaFox());\n\n        case 3:\n          mangaFox = _context2.sent;\n          scansVa = scansVa.concat(mangaFox);\n          cache = JSON.parse(localStorage.getItem('cache'));\n          cache.scansVa = scansVa;\n          cache.scansVaDate = new Date();\n          localStorage.setItem('cache', _JSON$stringify(cache));\n          return _context2.abrupt(\"return\", scansVa);\n\n        case 10:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  });\n};\n\nvar getScantrad = function getScantrad() {\n  var json, datas;\n  return _regeneratorRuntime.async(function getScantrad$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return _regeneratorRuntime.awrap(fetchRss(SCANTRAD));\n\n        case 2:\n          json = _context3.sent;\n          datas = formatJsonScantrad(json);\n          return _context3.abrupt(\"return\", datas);\n\n        case 5:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  });\n};\n\nvar getMangaFox = function getMangaFox() {\n  var datas, i, json, data;\n  return _regeneratorRuntime.async(function getMangaFox$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          datas = [];\n          i = 1;\n\n        case 2:\n          if (!(i <= 10)) {\n            _context4.next = 11;\n            break;\n          }\n\n          _context4.next = 5;\n          return _regeneratorRuntime.awrap(Axios.get('https://cors-anywhere.herokuapp.com/' + MANGAFOX + i + '.html'));\n\n        case 5:\n          json = _context4.sent;\n          data = formatJsonMangaFox(json);\n          datas = datas.concat(data);\n\n        case 8:\n          i++;\n          _context4.next = 2;\n          break;\n\n        case 11:\n          return _context4.abrupt(\"return\", datas);\n\n        case 12:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  });\n};\n\nvar formatJsonScantrad = function formatJsonScantrad(json) {\n  var array = [];\n  var items = json.rss.channel.item;\n\n  for (var i = 0; i < items.length; i++) {\n    if (isInList(items[i].title['_cdata'].toUpperCase(), 'scans')) {\n      var title = items[i].title['_cdata'].replace('Scan - ', '');\n      title = title.replace('Chapitre ', '');\n      var item = {\n        title: title,\n        link: items[i].link['_text'],\n        pubDate: items[i].pubDate['_text'],\n        site: 'Scantrad',\n        img: items[i].description['_cdata'].match('src=\"(https.*.png)')[0].replace('src=\"', ''),\n        lang: 'VF'\n      };\n      array.push(item);\n    }\n  }\n\n  return array;\n};\n\nvar formatJsonMangaFox = function formatJsonMangaFox(json) {\n  var array = [];\n  var doc = new DOMParser().parseFromString(json.data, 'text/html');\n  var ul = doc.getElementsByClassName('manga-list-4-list')[0];\n\n  for (var i = 0; i < ul.children.length; i++) {\n    var title = ul.children[i].children[1].innerText;\n\n    if (isInList(title.toUpperCase(), 'scans')) {\n      var img = ul.children[i].children[0].children[0].attributes[1].value;\n      var date = ul.children[i].children[2].children[0].innerText;\n      var chapt = ul.children[i].children[3].children[0] ? ul.children[i].children[3].children[0].innerText.replace('Ch.', '') : '';\n      var link = ul.children[i].children[3].children[0] ? ul.children[i].children[3].children[0].children[1].attributes[0].value : ul.children[i].children[0].attributes[0].value;\n      var item = {\n        title: title + ' ' + chapt,\n        link: 'http://fanfox.net' + link,\n        pubDate: date,\n        site: 'MangaFox',\n        img: img,\n        lang: 'VA'\n      };\n      array.push(item);\n    }\n  }\n\n  return array;\n};","map":{"version":3,"sources":["/Users/kevhoque/Documents/MyTest/myJapan/helpers/Scans.js"],"names":["fetchRss","isInList","SCANTRAD","MANGAFOX","Axios","getScans","scans","getScantrad","scantrad","concat","sort","a","b","Date","pubDate","cache","JSON","parse","localStorage","getItem","scansDate","setItem","getScansVA","scansVa","getMangaFox","mangaFox","scansVaDate","json","datas","formatJsonScantrad","i","get","data","formatJsonMangaFox","array","items","rss","channel","item","length","title","toUpperCase","replace","link","site","img","description","match","lang","push","doc","DOMParser","parseFromString","ul","getElementsByClassName","children","innerText","attributes","value","date","chapt"],"mappings":"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","sourcesContent":["import { fetchRss, isInList } from './Shared'\nimport { SCANTRAD, MANGAFOX } from '../rss';\nimport Axios from 'axios';\n\nexport const getScans = async () => {\n    let scans = []\n    let scantrad = await getScantrad()\n    scans = scans.concat(scantrad)\n    scans.sort((a, b) => new Date(b.pubDate) - new Date(a.pubDate))\n\n    let cache = JSON.parse(localStorage.getItem('cache'))\n    cache.scans = scans\n    cache.scansDate = new Date()\n    localStorage.setItem('cache', JSON.stringify(cache))\n\n    return scans\n}\n\nexport const getScansVA = async () => {\n    let scansVa = []\n    let mangaFox = await getMangaFox()\n    scansVa = scansVa.concat(mangaFox)\n\n    let cache = JSON.parse(localStorage.getItem('cache'))\n    cache.scansVa = scansVa\n    cache.scansVaDate = new Date()\n    localStorage.setItem('cache', JSON.stringify(cache))\n\n    return scansVa\n}\n\nconst getScantrad = async () => {\n    let json = await fetchRss(SCANTRAD)\n    let datas = formatJsonScantrad(json)\n    return datas\n}\n\nconst getMangaFox = async () => {\n    let datas = []\n    for(let i = 1; i <= 10; i++) {\n        let json = await Axios.get('https://cors-anywhere.herokuapp.com/' + MANGAFOX + i + '.html')\n        let data = formatJsonMangaFox(json)\n        datas = datas.concat(data)\n    }\n\n    return datas\n}\n\nconst formatJsonScantrad = (json) => {\n    let array = []\n    const items = json.rss.channel.item\n    for(var i = 0; i < items.length; i++) {\n        if(isInList(items[i].title['_cdata'].toUpperCase(), 'scans')) {\n            let title = items[i].title['_cdata'].replace('Scan - ', '')\n            title = title.replace('Chapitre ', '')\n            let item = {\n                title: title,\n                link: items[i].link['_text'],\n                pubDate: items[i].pubDate['_text'],\n                site: 'Scantrad',\n                img: items[i].description['_cdata'].match('src=\"(https.*.png)')[0].replace('src=\"', ''),\n                lang: 'VF'\n            }\n            array.push(item)\n        }\n    }\n    return array\n}\n\nconst formatJsonMangaFox = (json) => {\n    let array = []\n    const doc = new DOMParser().parseFromString(json.data, 'text/html')\n    const ul = doc.getElementsByClassName('manga-list-4-list')[0]\n    for(let i = 0; i < ul.children.length; i++) {\n        let title = ul.children[i].children[1].innerText\n        if(isInList(title.toUpperCase(), 'scans')) {\n            let img = ul.children[i].children[0].children[0].attributes[1].value\n            let date = ul.children[i].children[2].children[0].innerText\n            let chapt = ul.children[i].children[3].children[0] ? ul.children[i].children[3].children[0].innerText.replace('Ch.', '') : ''\n            let link = ul.children[i].children[3].children[0] ? ul.children[i].children[3].children[0].children[1].attributes[0].value : ul.children[i].children[0].attributes[0].value\n            let item = {\n                title: title + ' ' + chapt,\n                link: 'http://fanfox.net' + link,\n                pubDate: date,\n                site: 'MangaFox',\n                img: img,\n                lang: 'VA'\n            }\n            array.push(item)\n        }\n    }\n    return array\n}"]},"metadata":{},"sourceType":"module"}