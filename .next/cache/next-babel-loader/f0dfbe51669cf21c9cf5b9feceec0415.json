{"ast":null,"code":"import { isInList } from './Shared';\nimport { ANIME_SEIKOU, UNIVERSANIMEIZ } from '../rss';\nimport Axios from 'axios';\nexport const getAnimes = async () => {\n  let animes = [];\n  await getAnimeSeikou(animes);\n  await getUniversAnimeiz(animes);\n  let cache = JSON.parse(localStorage.getItem('cache'));\n  cache.animes = animes;\n  cache.animesDate = new Date();\n  localStorage.setItem('cache', JSON.stringify(cache));\n  return animes;\n};\n\nconst getAnimeSeikou = async array => {\n  for (let i = 1; i <= 2; i++) {\n    let json = await Axios.get('https://cors-anywhere.herokuapp.com/' + ANIME_SEIKOU + i + '/');\n    formatJsonAnimeSeikou(json, array);\n  }\n\n  return array;\n};\n\nconst getUniversAnimeiz = async array => {\n  for (let i = 1; i <= 2; i++) {\n    let json = await Axios.get('https://cors-anywhere.herokuapp.com/' + UNIVERSANIMEIZ + i + '/');\n    formatJsonUniversAnimeiz(json, array);\n  }\n\n  return array;\n};\n\nconst formatJsonAnimeSeikou = (json, array) => {\n  const doc = new DOMParser().parseFromString(json.data, 'text/html');\n  const items = doc.getElementsByClassName('slide-entry');\n\n  for (let i = 0; i < items.length; i++) {\n    let title = items[i].children[3].children[5].innerText;\n    title = title.replace('VOSTFR', '');\n    title = title.replace('vostfr', '');\n\n    if (isInList(title.toUpperCase(), 'animes')) {\n      let img = items[i].children[0].children[0].attributes[2].value;\n      let date = items[i].children[3].children[3].innerText;\n      let link = items[i].children[0].href;\n      let item = {\n        title: title,\n        link: link,\n        // pubDate: date,\n        site: 'Anime Seikou',\n        img: img,\n        lang: 'VOSTFR'\n      };\n      if (!isInArray(item, array)) array.push(item);\n    }\n  }\n};\n\nconst formatJsonUniversAnimeiz = (json, array) => {\n  const doc = new DOMParser().parseFromString(json.data, 'text/html');\n  const items = doc.getElementsByClassName('recent-posts')[0];\n\n  for (let i = 0; i < items.children.length; i++) {\n    let title = items.children[i].children[1].children[1].innerText;\n    title = title.replace('VOSTFR', '');\n    title = title.replace('vostfr', '');\n\n    if (isInList(title.toUpperCase(), 'animes') && !title.includes('VF')) {\n      let episode = items.children[i].children[1].children[3].innerText;\n      let img = items.children[i].children[0].children[0].children[0].attributes[0].value;\n      let link = items.children[i].children[0].children[0].href;\n      let item = {\n        title: title + ' ' + episode.replace('Ã‰pisode ', ''),\n        link: link,\n        site: 'Univers Animeiz',\n        img: img,\n        lang: 'VOSTFR'\n      };\n      if (!isInArray(item, array)) array.push(item);\n    }\n  }\n};\n\nconst isInArray = (item, array) => {\n  let isInArray = false;\n\n  for (let anime of array) {\n    if (anime.title.includes(item.title)) return isInArray = true;\n  }\n\n  return isInArray;\n};","map":{"version":3,"sources":["/Users/kevhoque/Documents/MyTest/myJapan/helpers/Animes.js"],"names":["isInList","ANIME_SEIKOU","UNIVERSANIMEIZ","Axios","getAnimes","animes","getAnimeSeikou","getUniversAnimeiz","cache","JSON","parse","localStorage","getItem","animesDate","Date","setItem","stringify","array","i","json","get","formatJsonAnimeSeikou","formatJsonUniversAnimeiz","doc","DOMParser","parseFromString","data","items","getElementsByClassName","length","title","children","innerText","replace","toUpperCase","img","attributes","value","date","link","href","item","site","lang","isInArray","push","includes","episode","anime"],"mappings":"AAAA,SAASA,QAAT,QAAyB,UAAzB;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,QAA7C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,SAAS,GAAG,YAAY;AACjC,MAAIC,MAAM,GAAG,EAAb;AACA,QAAMC,cAAc,CAACD,MAAD,CAApB;AACA,QAAME,iBAAiB,CAACF,MAAD,CAAvB;AAEA,MAAIG,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAZ;AACAJ,EAAAA,KAAK,CAACH,MAAN,GAAeA,MAAf;AACAG,EAAAA,KAAK,CAACK,UAAN,GAAmB,IAAIC,IAAJ,EAAnB;AACAH,EAAAA,YAAY,CAACI,OAAb,CAAqB,OAArB,EAA8BN,IAAI,CAACO,SAAL,CAAeR,KAAf,CAA9B;AAEA,SAAOH,MAAP;AACH,CAXM;;AAaP,MAAMC,cAAc,GAAG,MAAOW,KAAP,IAAiB;AACpC,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,IAAI,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AACxB,QAAIC,IAAI,GAAG,MAAMhB,KAAK,CAACiB,GAAN,CAAU,yCAAyCnB,YAAzC,GAAwDiB,CAAxD,GAA4D,GAAtE,CAAjB;AACAG,IAAAA,qBAAqB,CAACF,IAAD,EAAOF,KAAP,CAArB;AACH;;AACD,SAAOA,KAAP;AACH,CAND;;AAQA,MAAMV,iBAAiB,GAAG,MAAOU,KAAP,IAAiB;AACvC,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,IAAI,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AACxB,QAAIC,IAAI,GAAG,MAAMhB,KAAK,CAACiB,GAAN,CAAU,yCAAyClB,cAAzC,GAA0DgB,CAA1D,GAA8D,GAAxE,CAAjB;AACAI,IAAAA,wBAAwB,CAACH,IAAD,EAAOF,KAAP,CAAxB;AACH;;AACD,SAAOA,KAAP;AACH,CAND;;AAQA,MAAMI,qBAAqB,GAAG,CAACF,IAAD,EAAOF,KAAP,KAAiB;AAC3C,QAAMM,GAAG,GAAG,IAAIC,SAAJ,GAAgBC,eAAhB,CAAgCN,IAAI,CAACO,IAArC,EAA2C,WAA3C,CAAZ;AACA,QAAMC,KAAK,GAAGJ,GAAG,CAACK,sBAAJ,CAA2B,aAA3B,CAAd;;AACA,OAAI,IAAIV,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGS,KAAK,CAACE,MAAzB,EAAiCX,CAAC,EAAlC,EAAsC;AAClC,QAAIY,KAAK,GAAGH,KAAK,CAACT,CAAD,CAAL,CAASa,QAAT,CAAkB,CAAlB,EAAqBA,QAArB,CAA8B,CAA9B,EAAiCC,SAA7C;AACAF,IAAAA,KAAK,GAAGA,KAAK,CAACG,OAAN,CAAc,QAAd,EAAwB,EAAxB,CAAR;AACAH,IAAAA,KAAK,GAAGA,KAAK,CAACG,OAAN,CAAc,QAAd,EAAwB,EAAxB,CAAR;;AACA,QAAGjC,QAAQ,CAAC8B,KAAK,CAACI,WAAN,EAAD,EAAsB,QAAtB,CAAX,EAA4C;AACxC,UAAIC,GAAG,GAAGR,KAAK,CAACT,CAAD,CAAL,CAASa,QAAT,CAAkB,CAAlB,EAAqBA,QAArB,CAA8B,CAA9B,EAAiCK,UAAjC,CAA4C,CAA5C,EAA+CC,KAAzD;AACA,UAAIC,IAAI,GAAGX,KAAK,CAACT,CAAD,CAAL,CAASa,QAAT,CAAkB,CAAlB,EAAqBA,QAArB,CAA8B,CAA9B,EAAiCC,SAA5C;AACA,UAAIO,IAAI,GAAGZ,KAAK,CAACT,CAAD,CAAL,CAASa,QAAT,CAAkB,CAAlB,EAAqBS,IAAhC;AACA,UAAIC,IAAI,GAAG;AACPX,QAAAA,KAAK,EAAEA,KADA;AAEPS,QAAAA,IAAI,EAAEA,IAFC;AAGP;AACAG,QAAAA,IAAI,EAAE,cAJC;AAKPP,QAAAA,GAAG,EAAEA,GALE;AAMPQ,QAAAA,IAAI,EAAE;AANC,OAAX;AAQA,UAAG,CAACC,SAAS,CAACH,IAAD,EAAOxB,KAAP,CAAb,EACIA,KAAK,CAAC4B,IAAN,CAAWJ,IAAX;AACP;AACJ;AACJ,CAvBD;;AAyBA,MAAMnB,wBAAwB,GAAG,CAACH,IAAD,EAAOF,KAAP,KAAiB;AAC9C,QAAMM,GAAG,GAAG,IAAIC,SAAJ,GAAgBC,eAAhB,CAAgCN,IAAI,CAACO,IAArC,EAA2C,WAA3C,CAAZ;AACA,QAAMC,KAAK,GAAGJ,GAAG,CAACK,sBAAJ,CAA2B,cAA3B,EAA2C,CAA3C,CAAd;;AACA,OAAI,IAAIV,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGS,KAAK,CAACI,QAAN,CAAeF,MAAlC,EAA0CX,CAAC,EAA3C,EAA+C;AAC3C,QAAIY,KAAK,GAAGH,KAAK,CAACI,QAAN,CAAeb,CAAf,EAAkBa,QAAlB,CAA2B,CAA3B,EAA8BA,QAA9B,CAAuC,CAAvC,EAA0CC,SAAtD;AACAF,IAAAA,KAAK,GAAGA,KAAK,CAACG,OAAN,CAAc,QAAd,EAAwB,EAAxB,CAAR;AACAH,IAAAA,KAAK,GAAGA,KAAK,CAACG,OAAN,CAAc,QAAd,EAAwB,EAAxB,CAAR;;AACA,QAAGjC,QAAQ,CAAC8B,KAAK,CAACI,WAAN,EAAD,EAAsB,QAAtB,CAAR,IAA2C,CAACJ,KAAK,CAACgB,QAAN,CAAe,IAAf,CAA/C,EAAqE;AACjE,UAAIC,OAAO,GAAGpB,KAAK,CAACI,QAAN,CAAeb,CAAf,EAAkBa,QAAlB,CAA2B,CAA3B,EAA8BA,QAA9B,CAAuC,CAAvC,EAA0CC,SAAxD;AACA,UAAIG,GAAG,GAAGR,KAAK,CAACI,QAAN,CAAeb,CAAf,EAAkBa,QAAlB,CAA2B,CAA3B,EAA8BA,QAA9B,CAAuC,CAAvC,EAA0CA,QAA1C,CAAmD,CAAnD,EAAsDK,UAAtD,CAAiE,CAAjE,EAAoEC,KAA9E;AACA,UAAIE,IAAI,GAAGZ,KAAK,CAACI,QAAN,CAAeb,CAAf,EAAkBa,QAAlB,CAA2B,CAA3B,EAA8BA,QAA9B,CAAuC,CAAvC,EAA0CS,IAArD;AACA,UAAIC,IAAI,GAAG;AACPX,QAAAA,KAAK,EAAEA,KAAK,GAAG,GAAR,GAAciB,OAAO,CAACd,OAAR,CAAgB,UAAhB,EAA4B,EAA5B,CADd;AAEPM,QAAAA,IAAI,EAAEA,IAFC;AAGPG,QAAAA,IAAI,EAAE,iBAHC;AAIPP,QAAAA,GAAG,EAAEA,GAJE;AAKPQ,QAAAA,IAAI,EAAE;AALC,OAAX;AAOA,UAAG,CAACC,SAAS,CAACH,IAAD,EAAOxB,KAAP,CAAb,EACIA,KAAK,CAAC4B,IAAN,CAAWJ,IAAX;AACP;AACJ;AACJ,CAtBD;;AAwBA,MAAMG,SAAS,GAAG,CAACH,IAAD,EAAOxB,KAAP,KAAiB;AAC/B,MAAI2B,SAAS,GAAG,KAAhB;;AACA,OAAI,IAAII,KAAR,IAAiB/B,KAAjB,EAAuB;AACnB,QAAG+B,KAAK,CAAClB,KAAN,CAAYgB,QAAZ,CAAqBL,IAAI,CAACX,KAA1B,CAAH,EACI,OAAOc,SAAS,GAAG,IAAnB;AACP;;AACD,SAAOA,SAAP;AACH,CAPD","sourcesContent":["import { isInList } from './Shared'\nimport { ANIME_SEIKOU, UNIVERSANIMEIZ } from '../rss';\nimport Axios from 'axios';\n\nexport const getAnimes = async () => {\n    let animes = []\n    await getAnimeSeikou(animes)\n    await getUniversAnimeiz(animes)\n\n    let cache = JSON.parse(localStorage.getItem('cache'))\n    cache.animes = animes\n    cache.animesDate = new Date()\n    localStorage.setItem('cache', JSON.stringify(cache))\n\n    return animes\n}\n\nconst getAnimeSeikou = async (array) => {\n    for(let i = 1; i <= 2; i++) {\n        let json = await Axios.get('https://cors-anywhere.herokuapp.com/' + ANIME_SEIKOU + i + '/')\n        formatJsonAnimeSeikou(json, array)\n    }\n    return array\n}\n\nconst getUniversAnimeiz = async (array) => {\n    for(let i = 1; i <= 2; i++) {\n        let json = await Axios.get('https://cors-anywhere.herokuapp.com/' + UNIVERSANIMEIZ + i + '/')\n        formatJsonUniversAnimeiz(json, array)\n    }\n    return array\n}\n\nconst formatJsonAnimeSeikou = (json, array) => {\n    const doc = new DOMParser().parseFromString(json.data, 'text/html')\n    const items = doc.getElementsByClassName('slide-entry')\n    for(let i = 0; i < items.length; i++) {\n        let title = items[i].children[3].children[5].innerText\n        title = title.replace('VOSTFR', '')\n        title = title.replace('vostfr', '')\n        if(isInList(title.toUpperCase(), 'animes')) {\n            let img = items[i].children[0].children[0].attributes[2].value\n            let date = items[i].children[3].children[3].innerText\n            let link = items[i].children[0].href\n            let item = {\n                title: title,\n                link: link,\n                // pubDate: date,\n                site: 'Anime Seikou',\n                img: img,\n                lang: 'VOSTFR'\n            }\n            if(!isInArray(item, array))\n                array.push(item)\n        }\n    }\n}\n\nconst formatJsonUniversAnimeiz = (json, array) => {\n    const doc = new DOMParser().parseFromString(json.data, 'text/html')\n    const items = doc.getElementsByClassName('recent-posts')[0]\n    for(let i = 0; i < items.children.length; i++) {\n        let title = items.children[i].children[1].children[1].innerText\n        title = title.replace('VOSTFR', '')\n        title = title.replace('vostfr', '')\n        if(isInList(title.toUpperCase(), 'animes') && !title.includes('VF')) {\n            let episode = items.children[i].children[1].children[3].innerText\n            let img = items.children[i].children[0].children[0].children[0].attributes[0].value\n            let link = items.children[i].children[0].children[0].href\n            let item = {\n                title: title + ' ' + episode.replace('Ã‰pisode ', ''),\n                link: link,\n                site: 'Univers Animeiz',\n                img: img,\n                lang: 'VOSTFR'\n            }\n            if(!isInArray(item, array))\n                array.push(item)\n        }\n    }\n}\n\nconst isInArray = (item, array) => {\n    let isInArray = false\n    for(let anime of array){\n        if(anime.title.includes(item.title))\n            return isInArray = true\n    }\n    return isInArray\n}"]},"metadata":{},"sourceType":"module"}