{"version":3,"file":"static/webpack/static/development/pages/animes.js.f7c5b4aa934cf7b96ff8.hot-update.js","sources":["webpack:///./pages/animes.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getAnimes } from '../helpers/Animes'\nimport { dateDiff } from '../helpers/Shared'\nimport debounce from \"lodash.debounce\";\nimport { ParallaxProvider } from 'react-scroll-parallax';\nimport { ParallaxBanner } from 'react-scroll-parallax';\nimport Card from '../components/Animes/Card'\nimport Loader from '../components/Loader/Loader'\nimport banner from '../public/img/banner.jpg'\n\nconst Animes = (props) => {\n    const pageToDisplay = 9\n    const [animes, setAnimes] = useState(props.animes || [])\n    const [displayedAnimes, setDisplayedAnimes] = useState([])\n    const [hasMore, setHasMore] = useState(true)\n    const [loader, setLoader] = useState(true)\n    const [deepLoader, setDeepLoader] = useState(false)\n\n    useEffect(() => {\n        window.onscroll = debounce(() => {\n            if (!hasMore) return\n            let scroll = window.innerHeight + document.documentElement.scrollTop\n            if ( scroll === document.documentElement.offsetHeight)\n                loadItems()\n        }, 100);\n    }, [animes])\n\n    useEffect(() => {\n\n        const fetchDatas = async () => {\n            const _animes = await getAnimes()\n            setAnimes(_animes)\n            setDisplayedAnimes(_animes.slice(0, pageToDisplay))\n            setLoader(false)\n            if(deepLoader) {\n                setDeepLoader(false)\n            }\n        }\n\n        const cache = JSON.parse(localStorage.getItem('cache'))\n        if(!props.animes && cache.animes) {\n            const _animes = cache.animes\n            setAnimes(_animes)\n            setDisplayedAnimes(_animes.slice(0, pageToDisplay))\n            setLoader(false)\n            if(dateDiff(new Date(cache.animesDate), new Date()).min > 10) {\n                fetchDatas()\n                setDeepLoader(true)\n            }\n        } else {\n            fetchDatas()\n        }\n\n    }, [deepLoader]);\n\n    const loadItems = () => {\n        let nbToDisplay = displayedAnimes.length + pageToDisplay\n        if(nbToDisplay > animes.length) {\n            nbToDisplay = animes.length\n            setHasMore(false)\n        }\n        setDisplayedAnimes(animes.slice(0, nbToDisplay))\n    }\n\n    return (\n        <div className=\"Animes\">\n            <ParallaxProvider>\n                <ParallaxBanner className=\"homescreen banner\" layers={[{ image: banner, amount: 0.5 }]} style={{ height: '300px' }}>\n                    <h1 className=\"title\">ANIMES</h1>\n                </ParallaxBanner>\n                {deepLoader && <Loader style={{marginTop: '20px'}} />}\n                <div className=\"card-container\">\n                    {   loader ? <Loader /> :\n                        displayedAnimes.map((item, index) =>\n                            <Card key={index} item={item} />\n                        )\n                    }\n                </div>\n            </ParallaxProvider>\n        </div>\n    );\n}\n\nAnimes.getInitialProps = async ({req}) => {\n    if(req) {\n        // const animes = await getAnimes();\n        // return {animes}\n    }\n    return {}\n}\n\nexport default Animes;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAOA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AASA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAQA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AALA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;;;;A","sourceRoot":""}