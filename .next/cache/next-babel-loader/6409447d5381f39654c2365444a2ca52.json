{"ast":null,"code":"var _jsxFileName = \"/Users/kevhoque/Documents/MyTest/myJapan/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Link from 'next/link.js';\nimport { ParallaxProvider } from 'react-scroll-parallax';\nimport { ParallaxBanner } from 'react-scroll-parallax';\nimport { getNews } from '../helpers/News';\nimport { dateDiff } from '../helpers/Shared';\nimport LazyLoad from 'react-lazyload';\nimport Loader from '../components/Loader/Loader';\nimport Card from '../components/News/Card';\nimport FlipCard from '../components/Home/FlipCard/FlipCard';\nimport PresentationVF from '../components/Home/Presentation/PresentationVF';\nimport PresentationVA from '../components/Home/Presentation/PresentationVA';\nimport DescriptionVF from '../components/Home/Description/DescriptionVF';\nimport DescriptionVA from '../components/Home/Description/DescriptionVA';\nimport banner from '../public/img/banner.jpg';\nimport homescreen from '../public/img/homescreen.jpg';\nimport homescreen2 from '../public/img/homescreen2.jpg';\nimport homescreen3 from '../public/img/homescreen3.jpg';\n\nconst Index = props => {\n  const {\n    0: news,\n    1: setNews\n  } = useState([]);\n  const {\n    0: loader,\n    1: setLoader\n  } = useState(true);\n  useEffect(() => {\n    const fetchDatas = async () => {\n      let currentNews = [...(await getNews())];\n      currentNews.length = 4;\n      setNews(currentNews);\n      setLoader(false);\n    };\n\n    const cache = JSON.parse(localStorage.getItem('cache'));\n\n    if (cache.news) {\n      const currentNews = [...cache.news];\n      currentNews.length = 4;\n      setNews(currentNews);\n      setLoader(false);\n      if (dateDiff(new Date(cache.newsDate), new Date()).min > 5) fetchDatas();\n    } else {\n      fetchDatas();\n    }\n  }, []);\n  return __jsx(\"div\", {\n    className: \"Home\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, __jsx(ParallaxProvider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, __jsx(ParallaxBanner, {\n    className: \"homescreen banner\",\n    layers: [{\n      image: banner,\n      amount: 0.5\n    }],\n    style: {\n      height: '300px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"HOME\")), __jsx(FlipCard, {\n    front: __jsx(PresentationVF, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }),\n    back: __jsx(PresentationVA, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), __jsx(LazyLoad, {\n    placeholder: __jsx(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, __jsx(ParallaxBanner, {\n    className: \"homescreen\",\n    layers: [{\n      image: homescreen2,\n      amount: 0.5\n    }],\n    style: {\n      height: '450px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })), __jsx(FlipCard, {\n    front: __jsx(DescriptionVF, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }),\n    back: __jsx(DescriptionVA, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), __jsx(LazyLoad, {\n    placeholder: __jsx(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, __jsx(ParallaxBanner, {\n    className: \"homescreen\",\n    layers: [{\n      image: homescreen3,\n      amount: 0.5\n    }],\n    style: {\n      height: '450px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })), __jsx(LazyLoad, {\n    placeholder: __jsx(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, __jsx(ParallaxBanner, {\n    className: \"homescreen\",\n    layers: [{\n      image: homescreen,\n      amount: 0.5\n    }],\n    style: {\n      height: '450px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }))));\n};\n\nIndex.getInitialProps = async context => {\n  if (context.req) {// const videos = await getVideos(context);\n    // return {videos}\n  }\n\n  return {};\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/kevhoque/Documents/MyTest/myJapan/pages/index.js"],"names":["React","useState","useEffect","Link","ParallaxProvider","ParallaxBanner","getNews","dateDiff","LazyLoad","Loader","Card","FlipCard","PresentationVF","PresentationVA","DescriptionVF","DescriptionVA","banner","homescreen","homescreen2","homescreen3","Index","props","news","setNews","loader","setLoader","fetchDatas","currentNews","length","cache","JSON","parse","localStorage","getItem","Date","newsDate","min","image","amount","height","getInitialProps","context","req"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Link from 'next/link.js';\n\nimport { ParallaxProvider } from 'react-scroll-parallax';\nimport { ParallaxBanner } from 'react-scroll-parallax';\nimport { getNews } from '../helpers/News'\nimport { dateDiff } from '../helpers/Shared'\nimport LazyLoad from 'react-lazyload';\nimport Loader from '../components/Loader/Loader'\nimport Card from '../components/News/Card'\nimport FlipCard from '../components/Home/FlipCard/FlipCard'\nimport PresentationVF from '../components/Home/Presentation/PresentationVF'\nimport PresentationVA from '../components/Home/Presentation/PresentationVA'\nimport DescriptionVF from '../components/Home/Description/DescriptionVF'\nimport DescriptionVA from '../components/Home/Description/DescriptionVA'\n\nimport banner from '../public/img/banner.jpg'\nimport homescreen from '../public/img/homescreen.jpg'\nimport homescreen2 from '../public/img/homescreen2.jpg'\nimport homescreen3 from '../public/img/homescreen3.jpg'\n\nconst Index = (props) => {\n    const [news, setNews] = useState([]);\n    const [loader, setLoader] = useState(true);\n\n    useEffect(() => {\n      const fetchDatas = async () => {\n        let currentNews = [...await getNews()]\n        currentNews.length = 4\n        setNews(currentNews)\n        setLoader(false)\n      }\n\n      const cache = JSON.parse(localStorage.getItem('cache'))\n      if (cache.news) {\n        const currentNews = [...cache.news]\n        currentNews.length = 4\n        setNews(currentNews)\n        setLoader(false)\n        if(dateDiff(new Date(cache.newsDate), new Date()).min > 5)\n          fetchDatas()\n      } else {\n        fetchDatas()\n      }\n    }, []);\n\n    return (\n      <div className=\"Home\">\n\n        <ParallaxProvider>\n          <ParallaxBanner className=\"homescreen banner\" layers={[{ image: banner, amount: 0.5 }]} style={{ height: '300px' }}>\n            <h1 className=\"title\">HOME</h1>\n          </ParallaxBanner>\n          <FlipCard front={<PresentationVF />} back={<PresentationVA />} />\n          <LazyLoad placeholder={<Loader />}>\n            <ParallaxBanner className=\"homescreen\" layers={[{ image: homescreen2, amount: 0.5 }]} style={{ height: '450px' }}></ParallaxBanner>\n          </LazyLoad>\n          <FlipCard front={<DescriptionVF />} back={<DescriptionVA />} />\n          <LazyLoad placeholder={<Loader />}>\n            <ParallaxBanner className=\"homescreen\" layers={[{ image: homescreen3, amount: 0.5 }]} style={{ height: '450px' }}></ParallaxBanner>\n          </LazyLoad>\n          {/*<section>\n            <div className=\"news\">\n              <h2>Last News</h2>\n              <div className=\"card-container\">\n                {loader ? <Loader /> :\n                  news.map((item, index) =>\n                    <Card key={index} news={item} />\n                  )\n                }\n              </div>\n              <div className=\"cta\">\n                <Link to={NEWS}>Voir plus</Link>\n              </div>\n            </div>\n            </section>*/}\n          <LazyLoad placeholder={<Loader />}>\n            <ParallaxBanner className=\"homescreen\" layers={[{ image: homescreen, amount: 0.5 }]} style={{ height: '450px' }}></ParallaxBanner>\n          </LazyLoad>\n        </ParallaxProvider>\n\n      </div>\n    );\n  }\n\nIndex.getInitialProps = async (context) => {\n    if(context.req) {\n        // const videos = await getVideos(context);\n        // return {videos}\n    }\n    return {}\n}\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}