{"ast":null,"code":"import { fetchRss, isInList } from './Shared';\nimport { SCANTRAD, MANGAFOX } from '../rss';\nimport Axios from 'axios';\nimport { API } from '../api';\nexport const getApiScans = async () => {\n  try {\n    const {\n      data\n    } = await Axios.get(`${API}/api/scans`);\n    return data;\n  } catch (e) {\n    console.log(e);\n  }\n\n  return [];\n};\nexport const getApiScansVA = async () => {\n  try {\n    const {\n      data\n    } = await Axios.get(`${API}/api/scansva`);\n    return data;\n  } catch (e) {\n    console.log(e);\n  }\n\n  return [];\n};\nexport const getScans = async () => {\n  let scans = [];\n  let scantrad = await getScantrad();\n  scans = scans.concat(scantrad);\n  scans.sort((a, b) => new Date(b.pubDate) - new Date(a.pubDate));\n  let cache = JSON.parse(localStorage.getItem('cache'));\n  cache.scans = scans;\n  cache.scansDate = new Date();\n  localStorage.setItem('cache', JSON.stringify(cache));\n  return scans;\n};\nexport const getScansVA = async () => {\n  let scansVa = [];\n  let mangaFox = await getMangaFox();\n  scansVa = scansVa.concat(mangaFox);\n  let cache = JSON.parse(localStorage.getItem('cache'));\n  cache.scansVa = scansVa;\n  cache.scansVaDate = new Date();\n  localStorage.setItem('cache', JSON.stringify(cache));\n  return scansVa;\n};\n\nconst getScantrad = async () => {\n  let json = await fetchRss(SCANTRAD);\n  let datas = formatJsonScantrad(json);\n  return datas;\n};\n\nconst getMangaFox = async () => {\n  let datas = [];\n\n  for (let i = 1; i <= 10; i++) {\n    let json = await Axios.get('https://cors-anywhere.herokuapp.com/' + MANGAFOX + i + '.html');\n    let data = formatJsonMangaFox(json);\n    datas = datas.concat(data);\n  }\n\n  return datas;\n};\n\nconst formatJsonScantrad = json => {\n  let array = [];\n  const items = json.rss.channel.item;\n\n  for (var i = 0; i < items.length; i++) {\n    if (isInList(items[i].title['_cdata'].toUpperCase(), 'scans')) {\n      let title = items[i].title['_cdata'].replace('Scan - ', '');\n      title = title.replace('Chapitre ', '');\n      let item = {\n        title: title,\n        link: items[i].link['_text'],\n        pubDate: items[i].pubDate['_text'],\n        site: 'Scantrad',\n        img: items[i].description['_cdata'].match('src=\"(https.*.png)')[0].replace('src=\"', ''),\n        lang: 'VF'\n      };\n      array.push(item);\n    }\n  }\n\n  return array;\n};\n\nconst formatJsonMangaFox = json => {\n  let array = [];\n  const doc = new DOMParser().parseFromString(json.data, 'text/html');\n  const ul = doc.getElementsByClassName('manga-list-4-list')[0];\n\n  for (let i = 0; i < ul.children.length; i++) {\n    let title = ul.children[i].children[1].innerText;\n\n    if (isInList(title.toUpperCase(), 'scans')) {\n      let img = ul.children[i].children[0].children[0].attributes[1].value;\n      let date = ul.children[i].children[2].children[0].innerText;\n      let chapt = ul.children[i].children[3].children[0] ? ul.children[i].children[3].children[0].innerText.replace('Ch.', '') : '';\n      let link = ul.children[i].children[3].children[0] ? ul.children[i].children[3].children[0].children[1].attributes[0].value : ul.children[i].children[0].attributes[0].value;\n      let item = {\n        title: title + ' ' + chapt,\n        link: 'http://fanfox.net' + link,\n        pubDate: date,\n        site: 'MangaFox',\n        img: img,\n        lang: 'VA'\n      };\n      array.push(item);\n    }\n  }\n\n  return array;\n};","map":{"version":3,"sources":["/Users/kevhoque/Documents/MyTest/myJapan/helpers/Scans.js"],"names":["fetchRss","isInList","SCANTRAD","MANGAFOX","Axios","API","getApiScans","data","get","e","console","log","getApiScansVA","getScans","scans","scantrad","getScantrad","concat","sort","a","b","Date","pubDate","cache","JSON","parse","localStorage","getItem","scansDate","setItem","stringify","getScansVA","scansVa","mangaFox","getMangaFox","scansVaDate","json","datas","formatJsonScantrad","i","formatJsonMangaFox","array","items","rss","channel","item","length","title","toUpperCase","replace","link","site","img","description","match","lang","push","doc","DOMParser","parseFromString","ul","getElementsByClassName","children","innerText","attributes","value","date","chapt"],"mappings":"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","sourcesContent":["import { fetchRss, isInList } from './Shared'\nimport { SCANTRAD, MANGAFOX } from '../rss';\nimport Axios from 'axios';\nimport { API } from '../api'\n\nexport const getApiScans = async() => {\n    try {\n        const {data } = await Axios.get(`${API}/api/scans`)\n        return data\n    } catch(e) {\n        console.log(e)\n    }\n\n    return []\n}\n\nexport const getApiScansVA = async() => {\n    try {\n        const {data } = await Axios.get(`${API}/api/scansva`)\n        return data\n    } catch(e) {\n        console.log(e)\n    }\n\n    return []\n}\n\nexport const getScans = async () => {\n    let scans = []\n    let scantrad = await getScantrad()\n    scans = scans.concat(scantrad)\n    scans.sort((a, b) => new Date(b.pubDate) - new Date(a.pubDate))\n\n    let cache = JSON.parse(localStorage.getItem('cache'))\n    cache.scans = scans\n    cache.scansDate = new Date()\n    localStorage.setItem('cache', JSON.stringify(cache))\n\n    return scans\n}\n\nexport const getScansVA = async () => {\n    let scansVa = []\n    let mangaFox = await getMangaFox()\n    scansVa = scansVa.concat(mangaFox)\n\n    let cache = JSON.parse(localStorage.getItem('cache'))\n    cache.scansVa = scansVa\n    cache.scansVaDate = new Date()\n    localStorage.setItem('cache', JSON.stringify(cache))\n\n    return scansVa\n}\n\nconst getScantrad = async () => {\n    let json = await fetchRss(SCANTRAD)\n    let datas = formatJsonScantrad(json)\n    return datas\n}\n\nconst getMangaFox = async () => {\n    let datas = []\n    for(let i = 1; i <= 10; i++) {\n        let json = await Axios.get('https://cors-anywhere.herokuapp.com/' + MANGAFOX + i + '.html')\n        let data = formatJsonMangaFox(json)\n        datas = datas.concat(data)\n    }\n\n    return datas\n}\n\nconst formatJsonScantrad = (json) => {\n    let array = []\n    const items = json.rss.channel.item\n    for(var i = 0; i < items.length; i++) {\n        if(isInList(items[i].title['_cdata'].toUpperCase(), 'scans')) {\n            let title = items[i].title['_cdata'].replace('Scan - ', '')\n            title = title.replace('Chapitre ', '')\n            let item = {\n                title: title,\n                link: items[i].link['_text'],\n                pubDate: items[i].pubDate['_text'],\n                site: 'Scantrad',\n                img: items[i].description['_cdata'].match('src=\"(https.*.png)')[0].replace('src=\"', ''),\n                lang: 'VF'\n            }\n            array.push(item)\n        }\n    }\n    return array\n}\n\nconst formatJsonMangaFox = (json) => {\n    let array = []\n    const doc = new DOMParser().parseFromString(json.data, 'text/html')\n    const ul = doc.getElementsByClassName('manga-list-4-list')[0]\n    for(let i = 0; i < ul.children.length; i++) {\n        let title = ul.children[i].children[1].innerText\n        if(isInList(title.toUpperCase(), 'scans')) {\n            let img = ul.children[i].children[0].children[0].attributes[1].value\n            let date = ul.children[i].children[2].children[0].innerText\n            let chapt = ul.children[i].children[3].children[0] ? ul.children[i].children[3].children[0].innerText.replace('Ch.', '') : ''\n            let link = ul.children[i].children[3].children[0] ? ul.children[i].children[3].children[0].children[1].attributes[0].value : ul.children[i].children[0].attributes[0].value\n            let item = {\n                title: title + ' ' + chapt,\n                link: 'http://fanfox.net' + link,\n                pubDate: date,\n                site: 'MangaFox',\n                img: img,\n                lang: 'VA'\n            }\n            array.push(item)\n        }\n    }\n    return array\n}"]},"metadata":{},"sourceType":"module"}