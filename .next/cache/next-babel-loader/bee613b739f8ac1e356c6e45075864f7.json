{"ast":null,"code":"const {\n  fetchRss\n} = require('./Shared');\n\nconst {\n  ADALA,\n  NAUTIJON,\n  MANGASNEWS\n} = require('../rss');\n\nasync function getNews() {\n  let news = [];\n  const adala = await getAdalaNews();\n  const nautijon = await getNautijonNews();\n  const mangasNews = await getMangasNews();\n  news = news.concat(adala, nautijon, mangasNews);\n  news.sort((a, b) => new Date(b.pubDate) - new Date(a.pubDate));\n  return news;\n}\n\nasync function getAdalaNews() {\n  const json = await fetchRss(ADALA);\n  const datas = formatJsonAdala(json);\n  return datas;\n}\n\nasync function getNautijonNews() {\n  const json = await fetchRss(NAUTIJON);\n  const datas = formatJsonNautijon(json);\n  return datas;\n}\n\nasync function getMangasNews() {\n  const json = await fetchRss(MANGASNEWS);\n  const datas = formatJsonMangasNews(json);\n  return datas;\n}\n\nfunction formatJsonAdala(json) {\n  let array = [];\n  const items = json.rss.channel.item;\n\n  for (var i = 0; i < items.length; i++) {\n    const item = {\n      title: items[i].title['_text'],\n      desc: items[i].description['_cdata'],\n      link: items[i].link['_text'],\n      pubDate: items[i].pubDate['_text'],\n      category: items[i].category[0]['_cdata'],\n      site: 'Adala-news',\n      img: null\n    };\n    array.push(item);\n  }\n\n  return array;\n}\n\nfunction formatJsonNautijon(json) {\n  let array = [];\n  const items = json.rss.channel.item;\n\n  for (var i = 0; i < items.length; i++) {\n    const desc = items[i].description['_cdata'].split('<br />');\n    const src = desc[0].match('(https.*.jpg)');\n    const item = {\n      title: items[i].title['_text'],\n      desc: desc[1],\n      link: items[i].link['_text'],\n      pubDate: items[i].pubDate['_text'],\n      site: 'Nautijon',\n      img: src[0]\n    };\n    array.push(item);\n  }\n\n  return array;\n}\n\nfunction formatJsonMangasNews(json) {\n  let array = [];\n  const items = json.rss.channel.item;\n\n  for (var i = 0; i < items.length; i++) {\n    const desc = items[i].description['_cdata'].split('<p>');\n    const src = desc[0].match('(https.*.jpg)');\n    const item = {\n      title: items[i].title['_text'],\n      desc: desc[1].replace('</p>', ''),\n      link: items[i].link['_text'],\n      pubDate: items[i].pubDate['_text'],\n      site: 'Mangas-News',\n      img: src ? src[0] : null\n    };\n    array.push(item);\n  }\n\n  return array;\n}\n\nmodule.exports = getNews;","map":{"version":3,"sources":["/Users/kevhoque/Documents/MyTest/myJapan/apiHelpers/News.js"],"names":["fetchRss","require","ADALA","NAUTIJON","MANGASNEWS","getNews","news","adala","getAdalaNews","nautijon","getNautijonNews","mangasNews","getMangasNews","concat","sort","a","b","Date","pubDate","json","datas","formatJsonAdala","formatJsonNautijon","formatJsonMangasNews","array","items","rss","channel","item","i","length","title","desc","description","link","category","site","img","push","split","src","match","replace","module","exports"],"mappings":"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","sourcesContent":["const { fetchRss } = require('./Shared');\nconst { ADALA, NAUTIJON, MANGASNEWS } = require('../rss');\n\nasync function getNews() {\n    let news = []\n    const adala = await getAdalaNews()\n    const nautijon = await getNautijonNews()\n    const mangasNews = await getMangasNews()\n\n    news = news.concat(adala, nautijon, mangasNews)\n\n    news.sort((a, b) => new Date(b.pubDate) - new Date(a.pubDate))\n\n    return news\n}\n\nasync function getAdalaNews() {\n    const json = await fetchRss(ADALA)\n    const datas = formatJsonAdala(json)\n    return datas\n}\n\nasync function getNautijonNews() {\n    const json = await fetchRss(NAUTIJON)\n    const datas = formatJsonNautijon(json)\n    return datas\n}\n\nasync function getMangasNews() {\n    const json = await fetchRss(MANGASNEWS)\n    const datas = formatJsonMangasNews(json)\n    return datas\n}\n\nfunction formatJsonAdala(json) {\n    let array = []\n    const items = json.rss.channel.item\n    for(var i = 0; i < items.length; i++) {\n        const item = {\n            title: items[i].title['_text'],\n            desc: items[i].description['_cdata'],\n            link: items[i].link['_text'],\n            pubDate: items[i].pubDate['_text'],\n            category: items[i].category[0]['_cdata'],\n            site: 'Adala-news',\n            img: null\n        }\n        array.push(item)\n    }\n    return array\n}\n\nfunction formatJsonNautijon(json) {\n    let array = []\n    const items = json.rss.channel.item\n    for(var i = 0; i < items.length; i++) {\n        const desc = items[i].description['_cdata'].split('<br />')\n        const src = desc[0].match('(https.*.jpg)')\n        const item = {\n            title: items[i].title['_text'],\n            desc: desc[1],\n            link: items[i].link['_text'],\n            pubDate: items[i].pubDate['_text'],\n            site: 'Nautijon',\n            img: src[0]\n        }\n        array.push(item)\n    }\n    return array\n}\n\nfunction formatJsonMangasNews(json) {\n    let array = []\n    const items = json.rss.channel.item\n    for(var i = 0; i < items.length; i++) {\n        const desc = items[i].description['_cdata'].split('<p>')\n        const src = desc[0].match('(https.*.jpg)')\n        const item = {\n            title: items[i].title['_text'],\n            desc: desc[1].replace('</p>', ''),\n            link: items[i].link['_text'],\n            pubDate: items[i].pubDate['_text'],\n            site: 'Mangas-News',\n            img: src ? src[0] : null\n        }\n        array.push(item)\n    }\n    return array\n}\n\n\nmodule.exports = getNews;"]},"metadata":{},"sourceType":"script"}