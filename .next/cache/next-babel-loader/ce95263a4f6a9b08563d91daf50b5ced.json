{"ast":null,"code":"var _jsxFileName = \"/Users/kevhoque/Documents/MyTest/myJapan/pages/animes.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { getAnimes } from '../helpers/Animes';\nimport { dateDiff } from '../helpers/Shared';\nimport debounce from \"lodash.debounce\";\nimport { ParallaxProvider } from 'react-scroll-parallax';\nimport { ParallaxBanner } from 'react-scroll-parallax';\nimport Card from '../components/Animes/Card';\nimport Loader from '../components/Loader/Loader';\nimport banner from '../public/img/banner.jpg';\n\nconst Animes = props => {\n  const pageToDisplay = 9;\n  const {\n    0: animes,\n    1: setAnimes\n  } = useState(props.animes || []);\n  const {\n    0: displayedAnimes,\n    1: setDisplayedAnimes\n  } = useState([]);\n  const {\n    0: hasMore,\n    1: setHasMore\n  } = useState(true);\n  const {\n    0: loader,\n    1: setLoader\n  } = useState(true);\n  const {\n    0: deepLoader,\n    1: setDeepLoader\n  } = useState(false);\n  useEffect(() => {\n    window.onscroll = debounce(() => {\n      if (!hasMore) return;\n      let scroll = window.innerHeight + document.documentElement.scrollTop;\n      if (scroll === document.documentElement.offsetHeight) loadItems();\n    }, 100);\n\n    const fetchDatas = async () => {\n      const _animes = await getAnimes();\n\n      setAnimes(_animes);\n      setDisplayedAnimes(_animes.slice(0, pageToDisplay));\n      setLoader(false);\n\n      if (deepLoader) {\n        setDeepLoader(false);\n      }\n    };\n\n    const cache = JSON.parse(localStorage.getItem('cache'));\n\n    if (!props.animes && cache.animes) {\n      const _animes = cache.animes;\n      setAnimes(_animes);\n      setDisplayedAnimes(_animes.slice(0, pageToDisplay));\n      setLoader(false);\n\n      if (dateDiff(new Date(cache.animesDate), new Date()).min > 10) {\n        fetchDatas();\n        setDeepLoader(true);\n      }\n    } else {\n      fetchDatas();\n    }\n  }, [deepLoader]);\n  window.onscroll = debounce(() => {\n    if (!hasMore) return;\n    let scroll = window.innerHeight + document.documentElement.scrollTop;\n    if (scroll === document.documentElement.offsetHeight) loadItems();\n  }, 100);\n\n  const loadItems = () => {\n    let nbToDisplay = displayedAnimes.length + pageToDisplay;\n\n    if (nbToDisplay > animes.length) {\n      nbToDisplay = animes.length;\n      setHasMore(false);\n    }\n\n    setDisplayedAnimes(animes.slice(0, nbToDisplay));\n  };\n\n  return __jsx(\"div\", {\n    className: \"Animes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, __jsx(ParallaxProvider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, __jsx(ParallaxBanner, {\n    className: \"homescreen banner\",\n    layers: [{\n      image: banner,\n      amount: 0.5\n    }],\n    style: {\n      height: '300px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"ANIMES\")), deepLoader && __jsx(Loader, {\n    style: {\n      marginTop: '20px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"card-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, loader ? __jsx(Loader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }) : displayedAnimes.map((item, index) => __jsx(Card, {\n    key: index,\n    item: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })))));\n};\n\nAnimes.getInitialProps = async ({\n  req\n}) => {\n  if (req) {// const animes = await getAnimes();\n    // return {animes}\n  }\n\n  return {};\n};\n\nexport default Animes;","map":{"version":3,"sources":["/Users/kevhoque/Documents/MyTest/myJapan/pages/animes.js"],"names":["React","useState","useEffect","getAnimes","dateDiff","debounce","ParallaxProvider","ParallaxBanner","Card","Loader","banner","Animes","props","pageToDisplay","animes","setAnimes","displayedAnimes","setDisplayedAnimes","hasMore","setHasMore","loader","setLoader","deepLoader","setDeepLoader","window","onscroll","scroll","innerHeight","document","documentElement","scrollTop","offsetHeight","loadItems","fetchDatas","_animes","slice","cache","JSON","parse","localStorage","getItem","Date","animesDate","min","nbToDisplay","length","image","amount","height","marginTop","map","item","index","getInitialProps","req"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getAnimes } from '../helpers/Animes'\nimport { dateDiff } from '../helpers/Shared'\nimport debounce from \"lodash.debounce\";\nimport { ParallaxProvider } from 'react-scroll-parallax';\nimport { ParallaxBanner } from 'react-scroll-parallax';\nimport Card from '../components/Animes/Card'\nimport Loader from '../components/Loader/Loader'\nimport banner from '../public/img/banner.jpg'\n\nconst Animes = (props) => {\n    const pageToDisplay = 9\n    const [animes, setAnimes] = useState(props.animes || [])\n    const [displayedAnimes, setDisplayedAnimes] = useState([])\n    const [hasMore, setHasMore] = useState(true)\n    const [loader, setLoader] = useState(true)\n    const [deepLoader, setDeepLoader] = useState(false)\n\n    useEffect(() => {\n        window.onscroll = debounce(() => {\n            if (!hasMore) return\n            let scroll = window.innerHeight + document.documentElement.scrollTop\n            if ( scroll === document.documentElement.offsetHeight)\n                loadItems()\n        }, 100);\n\n        const fetchDatas = async () => {\n            const _animes = await getAnimes()\n            setAnimes(_animes)\n            setDisplayedAnimes(_animes.slice(0, pageToDisplay))\n            setLoader(false)\n            if(deepLoader) {\n                setDeepLoader(false)\n            }\n        }\n\n        const cache = JSON.parse(localStorage.getItem('cache'))\n        if(!props.animes && cache.animes) {\n            const _animes = cache.animes\n            setAnimes(_animes)\n            setDisplayedAnimes(_animes.slice(0, pageToDisplay))\n            setLoader(false)\n            if(dateDiff(new Date(cache.animesDate), new Date()).min > 10) {\n                fetchDatas()\n                setDeepLoader(true)\n            }\n        } else {\n            fetchDatas()\n        }\n\n    }, [deepLoader]);\n\n    window.onscroll = debounce(() => {\n        if (!hasMore) return\n        let scroll = window.innerHeight + document.documentElement.scrollTop\n        if ( scroll === document.documentElement.offsetHeight)\n            loadItems()\n    }, 100);\n\n    const loadItems = () => {\n        let nbToDisplay = displayedAnimes.length + pageToDisplay\n        if(nbToDisplay > animes.length) {\n            nbToDisplay = animes.length\n            setHasMore(false)\n        }\n        setDisplayedAnimes(animes.slice(0, nbToDisplay))\n    }\n\n    return (\n        <div className=\"Animes\">\n            <ParallaxProvider>\n                <ParallaxBanner className=\"homescreen banner\" layers={[{ image: banner, amount: 0.5 }]} style={{ height: '300px' }}>\n                    <h1 className=\"title\">ANIMES</h1>\n                </ParallaxBanner>\n                {deepLoader && <Loader style={{marginTop: '20px'}} />}\n                <div className=\"card-container\">\n                    {   loader ? <Loader /> :\n                        displayedAnimes.map((item, index) =>\n                            <Card key={index} item={item} />\n                        )\n                    }\n                </div>\n            </ParallaxProvider>\n        </div>\n    );\n}\n\nAnimes.getInitialProps = async ({req}) => {\n    if(req) {\n        // const animes = await getAnimes();\n        // return {animes}\n    }\n    return {}\n}\n\nexport default Animes;\n"]},"metadata":{},"sourceType":"module"}