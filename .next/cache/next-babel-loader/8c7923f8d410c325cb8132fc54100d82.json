{"ast":null,"code":"const axios = require('axios');\n\nconst cheerio = require('cheerio');\n\nconst {\n  isInList,\n  fetchRss\n} = require('./Shared');\n\nconst {\n  SCANTRAD,\n  MANGAFOX\n} = require('../rss');\n\nasync function getScans() {\n  let scans = [];\n  const scantrad = await getScantrad();\n  scans = scans.concat(scantrad);\n  scans.sort((a, b) => new Date(b.pubDate) - new Date(a.pubDate));\n  return scans;\n}\n\nasync function getScansVA() {\n  let scansVa = [];\n  const mangaFox = await getMangaFox();\n  scansVa = scansVa.concat(mangaFox);\n  return scansVa;\n}\n\nasync function getScantrad() {\n  const json = await fetchRss(SCANTRAD);\n  const datas = formatJsonScantrad(json);\n  return datas;\n}\n\nasync function getMangaFox() {\n  let datas = [];\n\n  for (let i = 1; i <= 10; i++) {\n    const json = await axios.get(MANGAFOX + i + '.html');\n    let data = formatJsonMangaFox(json);\n    datas = datas.concat(data);\n  }\n\n  return datas;\n}\n\nfunction formatJsonScantrad(json) {\n  let array = [];\n  const items = json.rss.channel.item;\n\n  for (var i = 0; i < items.length; i++) {\n    if (isInList(items[i].title['_cdata'].toUpperCase(), 'scans')) {\n      let title = items[i].title['_cdata'].replace('Scan - ', '');\n      title = title.replace('Chapitre ', '');\n      const item = {\n        title: title,\n        link: items[i].link['_text'],\n        pubDate: items[i].pubDate['_text'],\n        site: 'Scantrad',\n        img: items[i].description['_cdata'].match('src=\"(https.*.png)')[0].replace('src=\"', ''),\n        lang: 'VF'\n      };\n      array.push(item);\n    }\n  }\n\n  return array;\n}\n\nfunction formatJsonMangaFox(json) {\n  let array = [];\n  const $ = cheerio.load(json.data);\n  const items = $('.manga-list-4-list > li');\n\n  for (let i = 0; i < items.length; i++) {\n    let title = $('.manga-list-4-list > li > .manga-list-4-item-title > a')[i].children[0].data;\n\n    if (isInList(title.toUpperCase(), 'scans')) {\n      const img = $('.manga-list-4-list > li > a > img')[i].attribs.src;\n      const date = $('.manga-list-4-list > li > .manga-list-4-item-subtitle > span')[i].children[0].data;\n      const chapt = $('.manga-list-4-list > li > .manga-list-4-item-part > li:first-child > a')[i].children[0].data ? $('.manga-list-4-list > li > .manga-list-4-item-part > li:first-child > a')[i].children[0].data.replace('Ch.', '') : '';\n      const link = $('.manga-list-4-list > li > .manga-list-4-item-part > li:first-child > a')[i].attribs.href ? $('.manga-list-4-list > li > .manga-list-4-item-part > li:first-child > a')[i].attribs.href : $('.manga-list-4-list > li > a')[i].attribs.href;\n      const item = {\n        title: title + ' ' + chapt,\n        link: 'http://fanfox.net' + link,\n        pubDate: date,\n        site: 'MangaFox',\n        img: img,\n        lang: 'VA'\n      };\n      array.push(item);\n    }\n  }\n\n  return array;\n}\n\nmodule.exports = {\n  getScans,\n  getScansVA\n};","map":{"version":3,"sources":["/Users/kevhoque/Documents/MyTest/myJapan/apiHelpers/Scans.js"],"names":["axios","require","cheerio","isInList","fetchRss","SCANTRAD","MANGAFOX","getScans","scans","scantrad","getScantrad","concat","sort","a","b","Date","pubDate","getScansVA","scansVa","mangaFox","getMangaFox","json","datas","formatJsonScantrad","i","get","data","formatJsonMangaFox","array","items","rss","channel","item","length","title","toUpperCase","replace","link","site","img","description","match","lang","push","$","load","children","attribs","src","date","chapt","href","module","exports"],"mappings":"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","sourcesContent":["const axios = require('axios');\nconst cheerio = require('cheerio');\nconst { isInList, fetchRss } = require('./Shared');\nconst { SCANTRAD, MANGAFOX } = require('../rss');\n\nasync function getScans() {\n    let scans = []\n    const scantrad = await getScantrad()\n    scans = scans.concat(scantrad)\n    scans.sort((a, b) => new Date(b.pubDate) - new Date(a.pubDate))\n    return scans\n}\n\nasync function getScansVA() {\n    let scansVa = []\n    const mangaFox = await getMangaFox()\n    scansVa = scansVa.concat(mangaFox)\n    return scansVa\n}\n\nasync function getScantrad() {\n    const json = await fetchRss(SCANTRAD)\n    const datas = formatJsonScantrad(json)\n    return datas\n}\n\nasync function getMangaFox() {\n    let datas = []\n    for(let i = 1; i <= 10; i++) {\n        const json = await axios.get(MANGAFOX + i + '.html')\n        let data = formatJsonMangaFox(json)\n        datas = datas.concat(data)\n    }\n\n    return datas\n}\n\nfunction formatJsonScantrad(json) {\n    let array = []\n    const items = json.rss.channel.item\n    for(var i = 0; i < items.length; i++) {\n        if(isInList(items[i].title['_cdata'].toUpperCase(), 'scans')) {\n            let title = items[i].title['_cdata'].replace('Scan - ', '')\n            title = title.replace('Chapitre ', '')\n            const item = {\n                title: title,\n                link: items[i].link['_text'],\n                pubDate: items[i].pubDate['_text'],\n                site: 'Scantrad',\n                img: items[i].description['_cdata'].match('src=\"(https.*.png)')[0].replace('src=\"', ''),\n                lang: 'VF'\n            }\n            array.push(item)\n        }\n    }\n    return array\n}\n\nfunction formatJsonMangaFox(json) {\n    let array = []\n    const $ = cheerio.load(json.data)\n    const items = $('.manga-list-4-list > li')\n    for(let i = 0; i < items.length; i++) {\n        let title = $('.manga-list-4-list > li > .manga-list-4-item-title > a')[i].children[0].data\n        if(isInList(title.toUpperCase(), 'scans')) {\n            const img = $('.manga-list-4-list > li > a > img')[i].attribs.src\n            const date = $('.manga-list-4-list > li > .manga-list-4-item-subtitle > span')[i].children[0].data\n            const chapt = $('.manga-list-4-list > li > .manga-list-4-item-part > li:first-child > a')[i].children[0].data ? $('.manga-list-4-list > li > .manga-list-4-item-part > li:first-child > a')[i].children[0].data.replace('Ch.', '') : ''\n            const link = $('.manga-list-4-list > li > .manga-list-4-item-part > li:first-child > a')[i].attribs.href ? $('.manga-list-4-list > li > .manga-list-4-item-part > li:first-child > a')[i].attribs.href : $('.manga-list-4-list > li > a')[i].attribs.href\n            const item = {\n                title: title + ' ' + chapt,\n                link: 'http://fanfox.net' + link,\n                pubDate: date,\n                site: 'MangaFox',\n                img: img,\n                lang: 'VA'\n            }\n            array.push(item)\n        }\n    }\n    return array\n}\n\nmodule.exports = {\n    getScans,\n    getScansVA\n};"]},"metadata":{},"sourceType":"script"}