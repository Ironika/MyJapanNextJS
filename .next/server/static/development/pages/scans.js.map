{"version":3,"file":"static/development/pages/scans.js","sources":["webpack:///webpack/bootstrap","webpack:///./api.js","webpack:///./components/Loader/Loader.js","webpack:///./components/Scans/Card.js","webpack:///./components/Scans/CardVa.js","webpack:///./helpers/Scans.js","webpack:///./helpers/Shared.js","webpack:///./mangas.js","webpack:///./pages/scans.js","webpack:///./public/img/banner.jpg","webpack:///./public/img/loader.gif","webpack:///./rss.js","webpack:///external \"axios\"","webpack:///external \"lodash.debounce\"","webpack:///external \"react\"","webpack:///external \"react-lazyload\"","webpack:///external \"react-scroll-parallax\"","webpack:///external \"react-tilt\"","webpack:///external \"xml-js\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","export const API = 'http://localhost:3000'","import React from 'react';\n\n// import loaderPng from '../../assets/img/loader.png';\nimport loader from '../../public/img/loader.gif';\n\n// const LoaderPng = () => (\n//     <div className=\"loader\">\n//         <img src={loaderPng} alt=\"loader\"/>\n//     </div>\n// );\n\nconst Loader = (props) => (\n    <div className=\"loader\" style={props.style}>\n        <img src={loader} alt=\"loader\"/>\n    </div>\n);\n\nexport default Loader;","import React from 'react';\n\nconst Card = (props) => {\n    let pubDate = new Date(props.news.pubDate)\n        pubDate = pubDate.toLocaleDateString()\n\n    return (\n        <div className=\"card-scans\">\n            <a href={props.news.link} className=\"card-scans-container\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <img src={props.news.img} alt={props.news.title}/>\n                <div className=\"card-scans-container-content\">\n                    <p className=\"date\">{pubDate}</p>\n                    <h3>{props.news.title}</h3>\n                    <button>{props.news.lang}</button>\n                </div>\n            </a>\n        </div>\n    )\n};\n\nexport default Card;","import React from 'react';\nimport Tilt from 'react-tilt';\n\nconst CardVa = (props) => {\n    return (\n        <Tilt className=\"tilt tilt-va\">\n            <div className=\"card-scans-va\" style={{ backgroundImage: 'url(' + props.item.img + ')' }} onClick={() => window.open(props.item.link, '_blank')}>\n                <a href={props.item.link} className=\"card-scans-va-content\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    <p className=\"date\">{props.item.pubDate}</p>\n                    <h3>{props.item.title}</h3>\n                    <button>{props.item.lang}</button>\n                </a>\n            </div>\n        </Tilt>\n    )\n};\n\nexport default CardVa;","import { fetchRss, isInList } from './Shared'\nimport { SCANTRAD, MANGAFOX } from '../rss';\nimport Axios from 'axios';\nimport { API } from '../api'\n\nexport const getApiScans = async() => {\n    try {\n        const {data } = await Axios.get(`${API}/api/scans`)\n        return data\n    } catch(e) {\n        console.log(e)\n    }\n\n    return []\n}\n\nexport const getApiScansVA = async() => {\n    try {\n        const {data } = await Axios.get(`${API}/api/scansva`)\n        return data\n    } catch(e) {\n        console.log(e)\n    }\n\n    return []\n}\n\nexport const getScans = async () => {\n    let scans = []\n    let scantrad = await getScantrad()\n    scans = scans.concat(scantrad)\n    scans.sort((a, b) => new Date(b.pubDate) - new Date(a.pubDate))\n\n    let cache = JSON.parse(localStorage.getItem('cache'))\n    cache.scans = scans\n    cache.scansDate = new Date()\n    localStorage.setItem('cache', JSON.stringify(cache))\n\n    return scans\n}\n\nexport const getScansVA = async () => {\n    let scansVa = []\n    let mangaFox = await getMangaFox()\n    scansVa = scansVa.concat(mangaFox)\n\n    let cache = JSON.parse(localStorage.getItem('cache'))\n    cache.scansVa = scansVa\n    cache.scansVaDate = new Date()\n    localStorage.setItem('cache', JSON.stringify(cache))\n\n    return scansVa\n}\n\nconst getScantrad = async () => {\n    let json = await fetchRss(SCANTRAD)\n    let datas = formatJsonScantrad(json)\n    return datas\n}\n\nconst getMangaFox = async () => {\n    let datas = []\n    for(let i = 1; i <= 10; i++) {\n        let json = await Axios.get('https://cors-anywhere.herokuapp.com/' + MANGAFOX + i + '.html')\n        let data = formatJsonMangaFox(json)\n        datas = datas.concat(data)\n    }\n\n    return datas\n}\n\nconst formatJsonScantrad = (json) => {\n    let array = []\n    const items = json.rss.channel.item\n    for(var i = 0; i < items.length; i++) {\n        if(isInList(items[i].title['_cdata'].toUpperCase(), 'scans')) {\n            let title = items[i].title['_cdata'].replace('Scan - ', '')\n            title = title.replace('Chapitre ', '')\n            let item = {\n                title: title,\n                link: items[i].link['_text'],\n                pubDate: items[i].pubDate['_text'],\n                site: 'Scantrad',\n                img: items[i].description['_cdata'].match('src=\"(https.*.png)')[0].replace('src=\"', ''),\n                lang: 'VF'\n            }\n            array.push(item)\n        }\n    }\n    return array\n}\n\nconst formatJsonMangaFox = (json) => {\n    let array = []\n    const doc = new DOMParser().parseFromString(json.data, 'text/html')\n    const ul = doc.getElementsByClassName('manga-list-4-list')[0]\n    for(let i = 0; i < ul.children.length; i++) {\n        let title = ul.children[i].children[1].innerText\n        if(isInList(title.toUpperCase(), 'scans')) {\n            let img = ul.children[i].children[0].children[0].attributes[1].value\n            let date = ul.children[i].children[2].children[0].innerText\n            let chapt = ul.children[i].children[3].children[0] ? ul.children[i].children[3].children[0].innerText.replace('Ch.', '') : ''\n            let link = ul.children[i].children[3].children[0] ? ul.children[i].children[3].children[0].children[1].attributes[0].value : ul.children[i].children[0].attributes[0].value\n            let item = {\n                title: title + ' ' + chapt,\n                link: 'http://fanfox.net' + link,\n                pubDate: date,\n                site: 'MangaFox',\n                img: img,\n                lang: 'VA'\n            }\n            array.push(item)\n        }\n    }\n    return array\n}","import axios from 'axios';\nimport { scansList, animeList } from '../mangas'\n\nvar convert = require('xml-js');\n\nexport const fetchRss = async (url) => {\n    const response = await axios.get('https://cors-anywhere.herokuapp.com/' + url)\n    const json = JSON.parse(convert.xml2json(response.data, {compact: true, spaces: 4}));\n    return json\n}\n\nexport const isInList = (title, type) => {\n    let isInList = false\n    let list = scansList\n    if(type === 'animes')\n        list = animeList\n    for(let item of list) {\n        if(title.includes(item))\n            isInList = true\n    }\n    return isInList\n}\n\nexport function dateDiff(date1, date2){\n    var diff = {}\n    var tmp = date2 - date1;\n\n    tmp = Math.floor(tmp/1000);\n    diff.sec = tmp % 60;\n\n    tmp = Math.floor((tmp-diff.sec)/60);\n    diff.min = tmp % 60;\n\n    tmp = Math.floor((tmp-diff.min)/60);\n    diff.hour = tmp % 24;\n\n    tmp = Math.floor((tmp-diff.hour)/24);\n    diff.day = tmp;\n\n    return diff;\n}","export const scansList = [\n    \"A RETURNER'S MAGIC SHOULD BE SPECIAL\",\n    'A RETURNERS MAGIC SHOULD BE SPECIAL',\n    'APOTHEOSIS',\n    'ATTACK OF TITANS',\n    'BATTLE THROUGH THE HEAVENS',\n    'BLACK CLOVER',\n    'BOKU NO HERO ACADEMIA',\n    'BORUTO',\n    'BREAK THE WORLD',\n    'CHAOTIC SWORD GOD',\n    'D.GRAY-MAN',\n    'DEMON SLAYER',\n    'DEMON SPIRIT SEED MANUAL',\n    'DOULUO DALU',\n    'DR. STONE',\n    'DRAGON BALL SUPER',\n    'DRAGON KING OF THE WORLD',\n    \"EDEN'S ZERO\",\n    'EDENS ZERO',\n    'ETERNAL REVERENCE',\n    'EVERLASTING GOD OF SWORD',\n    'FAIRY TAIL:',\n    'FURY',\n    'GOD OF MARTIAL ARTS',\n    'GOD OF THE CITY',\n    'HERO? I QUIT A LONG TIME AGO',\n    'HOLY ANCESTOR',\n    'HUNTER AGE',\n    'HUNTER X HUNTER',\n    'I SHALL SEAL THE HEAVENS',\n    'I WAS TRASH',\n    'KIMETSU NO YAIBA',\n    'LEGEND OF PHOENIX',\n    'MARTIAL GOD SPACE',\n    'MARTIAL MOVEMENT UPHEAVAL',\n    'MURABITO DESU GA NANI KA?',\n    'MY HERO ACADEMIA',\n    'NANATSU NO TAIZAI',\n    'ONE PIECE',\n    'ONE PUNCH MAN',\n    'SEALED DIVINE THRONE',\n    'SEVEN DEADLY SINS',\n    'SHANLIAN DE SISHEN',\n    'SHINGEKI NO KYOJIN',\n    'SOLO LEVELING',\n    'SOUL LAND',\n    'SPIRIT BLADE MOUNTAIN',\n    'SPIRIT SWORD SOVEREIGN',\n    'STAR MARTIAL GOD TECHNIQUE',\n    'TALES OF DEMONS AND GODS',\n    'TATE NO YUUSHA NO NARIAGARI',\n    'THE BREAKER',\n    'THE CHILD OF LIGHT',\n    'THE GOD OF HIGH SCHOOL',\n    'THE GREAT RULER',\n    'THE LEGENDARY MOOLIGHT',\n    'THE MYTHICAL REALM',\n    'THE NEW GATE',\n    'THE PROMISED NEVERLAND',\n    'TOWER OF GOD',\n    'VERSATILE MAGE',\n    'WINNER TAKES ALL',\n    'X EPOCH OF DRAGON',\n    'YAKUSOKU NO NEVERLAND',\n    'YIN ZHI SHOUMUREN',\n    'YUAN ZUN'\n]\n\nexport const animeList = [\n    'AHIRU NO SORA',\n    'ATTACK OF TITANS',\n    'BEASTARS',\n    'BLACK CLOVER',\n    'BOKU NO HERO ACADEMIA',\n    'BORUTO',\n    'DEMON SLAYER',\n    'DR. STONE',\n    'ENEN NO SHOUBOUTAI',\n    'FIRE FORCE',\n    'GLEIPNIR',\n    'HAIKYU',\n    'KAGUYA-SAMA',\n    'KIMETSU NO YAIBA',\n    'MY HERO ACADEMIA',\n    'NANATSU NO TAIZAI',\n    'ONE PIECE',\n    'RADIANT',\n    'RE:ZERO',\n    'SHINGEKI NO KYOJIN',\n    'SOMALI TO MORI',\n    'SWORD ART ONLINE',\n    'THE PROMISED NEVERLAND',\n    'TO ARU',\n    'WE NEVER LEARN',\n    'YAKUSOKU NO NEVERLAND'\n]","import React, { useState, useEffect } from 'react';\nimport debounce from \"lodash.debounce\";\nimport LazyLoad from 'react-lazyload';\nimport { ParallaxProvider } from 'react-scroll-parallax';\nimport { ParallaxBanner } from 'react-scroll-parallax';\nimport { getApiScans, getApiScansVA } from '../helpers/Scans'\nimport Loader from '../components/Loader/Loader'\nimport CardVa from '../components/Scans/CardVa'\nimport Card from '../components/Scans/Card'\nimport banner from '../public/img/banner.jpg'\n\nconst Scans = (props) => {\n    const pageToDisplay = 12\n    const [nbToDisplay, setNbToDisplay] = useState(12)\n    const [scans, setScans] = useState(props.scans || [])\n    const [scansVa, setScansVa] = useState(props.scansVa || [])\n    const [displayedScansVa, setDisplayedScansVa] = useState([])\n    const [hasMore, setHasMore] = useState(true)\n    const [loader, setLoader] = useState(true)\n    const [loaderVa, setLoaderVa] = useState(true)\n    const [deepLoader, setDeepLoader] = useState(false)\n\n    useEffect(() => {\n        window.onscroll = debounce(() => {\n            if (!hasMore) return\n            let scroll = window.innerHeight + document.documentElement.scrollTop\n            if (scroll === document.documentElement.offsetHeight)\n                loadItems()\n        }, 100);\n    }, [displayedScansVa])\n\n    useEffect(() => {\n        const fetchScans = async () => {\n            const _scans = await getApiScans()\n            setScans(_scans)\n            setLoader(false)\n        }\n        const fetchScansVa = async (flag) => {\n            const _scansVa = await getApiScansVA()\n            setScansVa(_scansVa)\n            setDisplayedScansVa(_scansVa.slice(0, nbToDisplay))\n            setLoaderVa(false)\n            if (flag) {\n                setHasMore(true)\n                setDeepLoader(false)\n            }\n        }\n\n        fetchScans()\n        fetchScansVa()\n\n    }, [deepLoader, nbToDisplay]);\n\n    const loadItems = () => {\n        let currentNbToDisplay = displayedScansVa.length + pageToDisplay\n        if (currentNbToDisplay > scansVa.length) {\n            currentNbToDisplay = scansVa.length\n            setHasMore(false)\n        }\n        setNbToDisplay(currentNbToDisplay)\n        setDisplayedScansVa(scansVa.slice(0, currentNbToDisplay))\n    }\n\n    return (\n        <div className=\"Scans\">\n            <ParallaxProvider>\n                <ParallaxBanner className=\"homescreen banner\" layers={[{ image: banner, amount: 0.5 }]} style={{ height: '300px' }}>\n                    <h1 className=\"title\">SCANS</h1>\n                </ParallaxBanner>\n                <div className=\"container\">\n                    <div className=\"left\">\n                        <div className=\"card-container\">\n                            {loader ? <Loader /> :\n                                scans.map((item, index) =>\n                                    <LazyLoad key={index} placeholder={<Loader />}>\n                                        <Card news={item} />\n                                    </LazyLoad>\n                                )\n                            }\n                        </div>\n                    </div>\n                    <div className=\"right\">\n                        {deepLoader && <Loader style={{ marginTop: '20px' }} />}\n                        <div className=\"card-container\">\n                            {loaderVa ? <Loader /> :\n                                displayedScansVa.map((item, index) =>\n                                    <LazyLoad key={index} placeholder={<Loader />}>\n                                        <CardVa item={item} />\n                                    </LazyLoad>\n                                )\n                            }\n                        </div>\n                    </div>\n                </div>\n            </ParallaxProvider>\n        </div>\n    );\n}\n\nScans.getInitialProps = async ({req}) => {\n    if(req) {\n        const scans = await getApiScans();\n        const scansVa = await getApiScansVA();\n        return {scans, scansVa}\n    }\n    return {}\n}\n\nexport default Scans;\n","module.exports = \"/_next/static/images/banner-7395ebb6668a192d34828182cb189851.jpg\";","module.exports = \"/_next/static/images/loader-7b3f4161157f9e353d8a1099ceab340d.gif\";","// NEWS\nexport const ADALA = 'https://adala-news.fr/feed/';\nexport const NAUTIJON = 'https://www.nautiljon.com/actualite/rss.php';\nexport const MANGASNEWS = 'https://www.manga-news.com/index.php/feed/news';\n\n// SCANS\nexport const SCANTRAD = 'https://scantrad.net/rss/';\nexport const TOF = 'https://www.webtoons.com/en/fantasy/tower-of-god/rss?title_no=95';\nexport const MANGAFOX = 'http://fanfox.net/releases/';\n\n// ANIME\nexport const CRUNCHYROLL = 'https://www.crunchyroll.com/rss/anime?lang=frFR';\nexport const ADN = 'https://animedigitalnetwork.fr/rss';\nexport const ANIME_SEIKOU = 'https://anime-saikou.com/page/';\nexport const UNIVERSANIMEIZ = 'https://www.universanimeiz.com/page/'","module.exports = require(\"axios\");","module.exports = require(\"lodash.debounce\");","module.exports = require(\"react\");","module.exports = require(\"react-lazyload\");","module.exports = require(\"react-scroll-parallax\");","module.exports = require(\"react-tilt\");","module.exports = require(\"xml-js\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxFA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;ACAA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;;;;;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;;;;;;;;;;;;ACjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AAAA;AACA;;;;;;;;;;;;ACnHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;;;;;;;;;;;;ACxCA;AAAA;AAAA;AAAA;AAqEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;;;;;;;;;;;AC5GA;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACdA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}