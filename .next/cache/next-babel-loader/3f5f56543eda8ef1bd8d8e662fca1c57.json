{"ast":null,"code":"var _jsxFileName = \"/Users/kevhoque/Documents/MyTest/myJapan/pages/news.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { getNews, getApiNews } from '../helpers/News';\nimport { dateDiff } from '../helpers/Shared';\nimport debounce from \"lodash.debounce\";\nimport { ParallaxProvider } from 'react-scroll-parallax';\nimport { ParallaxBanner } from 'react-scroll-parallax';\nimport Card from '../components/News/Card';\nimport Loader from '../components/Loader/Loader';\nimport banner from '../public/img/banner.jpg';\n\nconst News = () => {\n  const pageToDisplay = 12;\n  const {\n    0: news,\n    1: setNews\n  } = useState([]);\n  const {\n    0: displayedNews,\n    1: setDisplayedNews\n  } = useState([]);\n  const {\n    0: hasMore,\n    1: setHasMore\n  } = useState(true);\n  const {\n    0: loader,\n    1: setLoader\n  } = useState(true);\n  useEffect(() => {\n    window.onscroll = debounce(() => {\n      if (!hasMore) return;\n      let scroll = window.innerHeight + document.documentElement.scrollTop;\n      if (scroll === document.documentElement.offsetHeight) loadItems();\n    }, 100);\n  }, [displayedNews]);\n  useEffect(() => {\n    const fetchDatas = async () => {\n      const currentNews = await getApiNews();\n      setNews(currentNews);\n      setDisplayedNews(currentNews.slice(0, pageToDisplay));\n      setLoader(false);\n    };\n\n    const cache = JSON.parse(localStorage.getItem('cache'));\n\n    if (cache.news) {\n      const currentNews = cache.news;\n      setNews(currentNews);\n      setDisplayedNews(currentNews.slice(0, pageToDisplay));\n      setLoader(false);\n      if (dateDiff(new Date(cache.newsDate), new Date()).min > 5) fetchDatas();\n    } else {\n      fetchDatas();\n    }\n  }, []);\n\n  const loadItems = () => {\n    let nbToDisplay = displayedNews.length + pageToDisplay;\n\n    if (nbToDisplay > news.length) {\n      nbToDisplay = news.length;\n      setHasMore(false);\n    }\n\n    setDisplayedNews(news.slice(0, nbToDisplay));\n  };\n\n  return __jsx(\"div\", {\n    className: \"News\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, __jsx(ParallaxProvider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, __jsx(ParallaxBanner, {\n    className: \"homescreen banner\",\n    layers: [{\n      image: banner,\n      amount: 0.5\n    }],\n    style: {\n      height: '300px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"NEWS\")), __jsx(\"div\", {\n    className: \"card-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, loader ? __jsx(Loader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }) : displayedNews.map((item, index) => __jsx(Card, {\n    key: index,\n    news: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  })))));\n};\n\nNews.getInitialProps = async context => {\n  if (context.req) {\n    const news = getApiNews();\n    return {\n      news\n    };\n  }\n\n  return {};\n};\n\nexport default News;","map":{"version":3,"sources":["/Users/kevhoque/Documents/MyTest/myJapan/pages/news.js"],"names":["React","useState","useEffect","getNews","getApiNews","dateDiff","debounce","ParallaxProvider","ParallaxBanner","Card","Loader","banner","News","pageToDisplay","news","setNews","displayedNews","setDisplayedNews","hasMore","setHasMore","loader","setLoader","window","onscroll","scroll","innerHeight","document","documentElement","scrollTop","offsetHeight","loadItems","fetchDatas","currentNews","slice","cache","JSON","parse","localStorage","getItem","Date","newsDate","min","nbToDisplay","length","image","amount","height","map","item","index","getInitialProps","context","req"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getNews, getApiNews } from '../helpers/News'\nimport { dateDiff } from '../helpers/Shared'\nimport debounce from \"lodash.debounce\";\nimport { ParallaxProvider } from 'react-scroll-parallax';\nimport { ParallaxBanner } from 'react-scroll-parallax';\nimport Card from '../components/News/Card'\nimport Loader from '../components/Loader/Loader'\nimport banner from '../public/img/banner.jpg'\n\nconst News = () => {\n    const pageToDisplay = 12\n    const [news, setNews] = useState([])\n    const [displayedNews, setDisplayedNews] = useState([])\n    const [hasMore, setHasMore] = useState(true)\n    const [loader, setLoader] = useState(true)\n\n    useEffect(() => {\n        window.onscroll = debounce(() => {\n            if (!hasMore) return\n            let scroll = window.innerHeight + document.documentElement.scrollTop\n            if ( scroll === document.documentElement.offsetHeight)\n                loadItems()\n        }, 100);\n    }, [displayedNews])\n\n    useEffect(() => {\n        const fetchDatas = async () => {\n            const currentNews = await getApiNews()\n            setNews(currentNews)\n            setDisplayedNews(currentNews.slice(0, pageToDisplay))\n            setLoader(false)\n        }\n\n        const cache = JSON.parse(localStorage.getItem('cache'))\n        if(cache.news) {\n            const currentNews = cache.news\n            setNews(currentNews)\n            setDisplayedNews(currentNews.slice(0, pageToDisplay))\n            setLoader(false)\n            if(dateDiff(new Date(cache.newsDate), new Date()).min > 5)\n                fetchDatas()\n        } else {\n            fetchDatas()\n        }\n\n    }, []);\n\n    const loadItems = () => {\n        let nbToDisplay = displayedNews.length + pageToDisplay\n        if(nbToDisplay > news.length) {\n            nbToDisplay = news.length\n            setHasMore(false)\n        }\n        setDisplayedNews(news.slice(0, nbToDisplay))\n    }\n\n    return (\n        <div className=\"News\">\n            <ParallaxProvider>\n                <ParallaxBanner className=\"homescreen banner\" layers={[{ image: banner, amount: 0.5 }]} style={{ height: '300px' }}>\n                    <h1 className=\"title\">NEWS</h1>\n                </ParallaxBanner>\n                <div className=\"card-container\">\n                    {   loader ? <Loader /> :\n                        displayedNews.map((item, index) =>\n                            <Card key={index} news={item} />\n                        )\n                    }\n                </div>\n            </ParallaxProvider>\n        </div>\n    );\n}\n\nNews.getInitialProps = async (context) => {\n    if(context.req) {\n        const news = getApiNews();\n        return {news}\n    }\n    return {}\n}\n\nexport default News;\n"]},"metadata":{},"sourceType":"module"}