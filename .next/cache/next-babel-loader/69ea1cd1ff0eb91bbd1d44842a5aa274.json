{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport { ADALA, NAUTIJON, MANGASNEWS } from '../rss';\nimport adala from '../public/img/adala.png';\nimport { fetchRss } from './Shared';\nimport Axios from 'axios';\nimport API from '../api';\nexport var getApiNews = function getApiNews() {\n  var cache, news;\n  return _regeneratorRuntime.async(function getApiNews$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          cache = JSON.parse(localStorage.getItem('cache'));\n\n          if (cache.news) {\n            _context.next = 7;\n            break;\n          }\n\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(Axios.get(\"\".concat(API, \"/api/news\")));\n\n        case 4:\n          news = _context.sent;\n          cache.news = news;\n          localStorage.setItem('cache', _JSON$stringify(cache));\n\n        case 7:\n          return _context.abrupt(\"return\", cache.news);\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\nexport var getNews = function getNews() {\n  var news, adala, nautijon, mangasNews, cache;\n  return _regeneratorRuntime.async(function getNews$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          news = [];\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(getAdalaNews());\n\n        case 3:\n          adala = _context2.sent;\n          _context2.next = 6;\n          return _regeneratorRuntime.awrap(getNautijonNews());\n\n        case 6:\n          nautijon = _context2.sent;\n          _context2.next = 9;\n          return _regeneratorRuntime.awrap(getMangasNews());\n\n        case 9:\n          mangasNews = _context2.sent;\n          news = news.concat(adala, nautijon, mangasNews);\n          news.sort(function (a, b) {\n            return new Date(b.pubDate) - new Date(a.pubDate);\n          });\n          cache = JSON.parse(localStorage.getItem('cache'));\n          cache.news = news;\n          cache.newsDate = new Date();\n          localStorage.setItem('cache', _JSON$stringify(cache));\n          return _context2.abrupt(\"return\", news);\n\n        case 17:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  });\n};\n\nvar getAdalaNews = function getAdalaNews() {\n  var json, datas;\n  return _regeneratorRuntime.async(function getAdalaNews$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return _regeneratorRuntime.awrap(fetchRss(ADALA));\n\n        case 2:\n          json = _context3.sent;\n          datas = formatJsonAdala(json);\n          return _context3.abrupt(\"return\", datas);\n\n        case 5:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  });\n};\n\nvar getNautijonNews = function getNautijonNews() {\n  var json, datas;\n  return _regeneratorRuntime.async(function getNautijonNews$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return _regeneratorRuntime.awrap(fetchRss(NAUTIJON));\n\n        case 2:\n          json = _context4.sent;\n          datas = formatJsonNautijon(json);\n          return _context4.abrupt(\"return\", datas);\n\n        case 5:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  });\n};\n\nvar getMangasNews = function getMangasNews() {\n  var json, datas;\n  return _regeneratorRuntime.async(function getMangasNews$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return _regeneratorRuntime.awrap(fetchRss(MANGASNEWS));\n\n        case 2:\n          json = _context5.sent;\n          datas = formatJsonMangasNews(json);\n          return _context5.abrupt(\"return\", datas);\n\n        case 5:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  });\n};\n\nvar formatJsonAdala = function formatJsonAdala(json) {\n  var array = [];\n  var items = json.rss.channel.item;\n\n  for (var i = 0; i < items.length; i++) {\n    var item = {\n      title: items[i].title['_text'],\n      desc: items[i].description['_cdata'],\n      link: items[i].link['_text'],\n      pubDate: items[i].pubDate['_text'],\n      category: items[i].category[0]['_cdata'],\n      site: 'Adala-news',\n      img: adala\n    };\n    array.push(item);\n  }\n\n  return array;\n};\n\nvar formatJsonNautijon = function formatJsonNautijon(json) {\n  var array = [];\n  var items = json.rss.channel.item;\n\n  for (var i = 0; i < items.length; i++) {\n    var desc = items[i].description['_cdata'].split('<br />');\n    var src = desc[0].match('(https.*.jpg)');\n    var item = {\n      title: items[i].title['_text'],\n      desc: desc[1],\n      link: items[i].link['_text'],\n      pubDate: items[i].pubDate['_text'],\n      site: 'Nautijon',\n      img: src[0]\n    };\n    array.push(item);\n  }\n\n  return array;\n};\n\nvar formatJsonMangasNews = function formatJsonMangasNews(json) {\n  var array = [];\n  var items = json.rss.channel.item;\n\n  for (var i = 0; i < items.length; i++) {\n    var desc = items[i].description['_cdata'].split('<p>');\n    var src = desc[0].match('(https.*.jpg)');\n    var item = {\n      title: items[i].title['_text'],\n      desc: desc[1].replace('</p>', ''),\n      link: items[i].link['_text'],\n      pubDate: items[i].pubDate['_text'],\n      site: 'Mangas-News',\n      img: src ? src[0] : adala\n    };\n    array.push(item);\n  }\n\n  return array;\n};","map":{"version":3,"sources":["/Users/kevhoque/Documents/MyTest/myJapan/helpers/News.js"],"names":["ADALA","NAUTIJON","MANGASNEWS","adala","fetchRss","Axios","API","getApiNews","cache","JSON","parse","localStorage","getItem","news","get","setItem","getNews","getAdalaNews","getNautijonNews","nautijon","getMangasNews","mangasNews","concat","sort","a","b","Date","pubDate","newsDate","json","datas","formatJsonAdala","formatJsonNautijon","formatJsonMangasNews","array","items","rss","channel","item","i","length","title","desc","description","link","category","site","img","push","split","src","match","replace"],"mappings":"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","sourcesContent":["\nimport { ADALA, NAUTIJON, MANGASNEWS } from '../rss';\nimport adala from '../public/img/adala.png';\nimport { fetchRss } from './Shared'\nimport Axios from 'axios';\nimport API from '../api'\n\nexport const getApiNews = async() => {\n    let cache = JSON.parse(localStorage.getItem('cache'))\n\n    if(!cache.news) {\n        let news = await Axios.get(`${API}/api/news`)\n        cache.news = news\n        localStorage.setItem('cache', JSON.stringify(cache))\n    }\n\n    return cache.news\n}\n\nexport const getNews = async () => {\n    let news = []\n    let adala = await getAdalaNews()\n    let nautijon = await getNautijonNews()\n    let mangasNews = await getMangasNews()\n\n    news = news.concat(adala, nautijon, mangasNews)\n\n    news.sort((a, b) => new Date(b.pubDate) - new Date(a.pubDate))\n\n    let cache = JSON.parse(localStorage.getItem('cache'))\n    cache.news = news\n    cache.newsDate = new Date()\n    localStorage.setItem('cache', JSON.stringify(cache))\n\n    return news\n}\n\nconst getAdalaNews = async () => {\n    let json = await fetchRss(ADALA)\n    let datas = formatJsonAdala(json)\n    return datas\n}\n\nconst getNautijonNews = async () => {\n    let json = await fetchRss(NAUTIJON)\n    let datas = formatJsonNautijon(json)\n    return datas\n}\n\nconst getMangasNews = async () => {\n    let json = await fetchRss(MANGASNEWS)\n    let datas = formatJsonMangasNews(json)\n    return datas\n}\n\nconst formatJsonAdala = (json) => {\n    let array = []\n    const items = json.rss.channel.item\n    for(var i = 0; i < items.length; i++) {\n        let item = {\n            title: items[i].title['_text'],\n            desc: items[i].description['_cdata'],\n            link: items[i].link['_text'],\n            pubDate: items[i].pubDate['_text'],\n            category: items[i].category[0]['_cdata'],\n            site: 'Adala-news',\n            img: adala\n        }\n        array.push(item)\n    }\n    return array\n}\n\nconst formatJsonNautijon = (json) => {\n    let array = []\n    const items = json.rss.channel.item\n    for(var i = 0; i < items.length; i++) {\n        const desc = items[i].description['_cdata'].split('<br />')\n        const src = desc[0].match('(https.*.jpg)')\n        let item = {\n            title: items[i].title['_text'],\n            desc: desc[1],\n            link: items[i].link['_text'],\n            pubDate: items[i].pubDate['_text'],\n            site: 'Nautijon',\n            img: src[0]\n        }\n        array.push(item)\n    }\n    return array\n}\n\nconst formatJsonMangasNews = (json) => {\n    let array = []\n    const items = json.rss.channel.item\n    for(var i = 0; i < items.length; i++) {\n        const desc = items[i].description['_cdata'].split('<p>')\n        const src = desc[0].match('(https.*.jpg)')\n        let item = {\n            title: items[i].title['_text'],\n            desc: desc[1].replace('</p>', ''),\n            link: items[i].link['_text'],\n            pubDate: items[i].pubDate['_text'],\n            site: 'Mangas-News',\n            img: src ? src[0] : adala\n        }\n        array.push(item)\n    }\n    return array\n}"]},"metadata":{},"sourceType":"module"}