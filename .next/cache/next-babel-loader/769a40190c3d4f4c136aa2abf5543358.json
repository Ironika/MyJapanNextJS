{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/Users/kevhoque/Documents/MyTest/myJapan/pages/scans.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport debounce from \"lodash.debounce\";\nimport LazyLoad from 'react-lazyload';\nimport { ParallaxProvider } from 'react-scroll-parallax';\nimport { ParallaxBanner } from 'react-scroll-parallax';\nimport { getScans, getScansVA } from '../helpers/Scans';\nimport { dateDiff } from '../helpers/Shared';\nimport Loader from '../components/Loader/Loader';\nimport CardVa from '../components/Scans/CardVa';\nimport Card from '../components/Scans/Card';\nimport banner from '../assets/img/banner.jpg';\n\nvar Scans = function Scans() {\n  var pageToDisplay = 12;\n\n  var _useState = useState(12),\n      nbToDisplay = _useState[0],\n      setNbToDisplay = _useState[1];\n\n  var _useState2 = useState([]),\n      scans = _useState2[0],\n      setScans = _useState2[1];\n\n  var _useState3 = useState([]),\n      scansVa = _useState3[0],\n      setScansVa = _useState3[1];\n\n  var _useState4 = useState([]),\n      displayedScansVa = _useState4[0],\n      setDisplayedScansVa = _useState4[1];\n\n  var _useState5 = useState(true),\n      hasMore = _useState5[0],\n      setHasMore = _useState5[1];\n\n  var _useState6 = useState(true),\n      loader = _useState6[0],\n      setLoader = _useState6[1];\n\n  var _useState7 = useState(true),\n      loaderVa = _useState7[0],\n      setLoaderVa = _useState7[1];\n\n  var _useState8 = useState(false),\n      deepLoader = _useState8[0],\n      setDeepLoader = _useState8[1];\n\n  useEffect(function () {\n    var fetchScans = function fetchScans() {\n      var currentScans;\n      return _regeneratorRuntime.async(function fetchScans$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.t0 = _toConsumableArray;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(getScans());\n\n            case 3:\n              _context.t1 = _context.sent;\n              currentScans = (0, _context.t0)(_context.t1);\n              setScans(currentScans);\n              setLoader(false);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    };\n\n    var fetchScansVa = function fetchScansVa(flag) {\n      var currentScansVa;\n      return _regeneratorRuntime.async(function fetchScansVa$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.t0 = _toConsumableArray;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(getScansVA());\n\n            case 3:\n              _context2.t1 = _context2.sent;\n              currentScansVa = (0, _context2.t0)(_context2.t1);\n              setScansVa(currentScansVa);\n              setDisplayedScansVa(currentScansVa.slice(0, nbToDisplay));\n              setLoaderVa(false);\n\n              if (flag) {\n                setHasMore(true);\n                setDeepLoader(false);\n              }\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    };\n\n    var cache = JSON.parse(localStorage.getItem('cache'));\n\n    if (cache.scans) {\n      var currentScans = cache.scans;\n      setScans(currentScans);\n      setLoader(false);\n      if (dateDiff(new Date(cache.scansDate), new Date()).min > 10) fetchScans();\n    } else {\n      fetchScans();\n    }\n\n    if (cache.scansVa) {\n      var currentScansVa = cache.scansVa;\n      setScansVa(currentScansVa);\n      setDisplayedScansVa(currentScansVa.slice(0, pageToDisplay));\n      setLoaderVa(false);\n\n      if (dateDiff(new Date(cache.scansVaDate), new Date()).min > 10) {\n        fetchScansVa(true);\n        setDeepLoader(true);\n      }\n    } else {\n      fetchScansVa();\n    }\n  }, [deepLoader, nbToDisplay]);\n\n  var loadItems = function loadItems() {\n    var currentNbToDisplay = displayedScansVa.length + pageToDisplay;\n\n    if (currentNbToDisplay > scansVa.length) {\n      currentNbToDisplay = scansVa.length;\n      setHasMore(false);\n    }\n\n    setNbToDisplay(currentNbToDisplay);\n    setDisplayedScansVa(scansVa.slice(0, currentNbToDisplay));\n  };\n\n  window.onscroll = debounce(function () {\n    if (!hasMore) return;\n    var scroll = window.innerHeight + document.documentElement.scrollTop;\n    if (scroll === document.documentElement.offsetHeight) loadItems();\n  }, 100);\n  return __jsx(\"div\", {\n    className: \"Scans\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, __jsx(ParallaxProvider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, __jsx(ParallaxBanner, {\n    className: \"homescreen banner\",\n    layers: [{\n      image: banner,\n      amount: 0.5\n    }],\n    style: {\n      height: '300px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"SCANS\")), __jsx(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"card-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, loader ? __jsx(Loader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }) : scans.map(function (item, index) {\n    return __jsx(LazyLoad, {\n      key: index,\n      placeholder: __jsx(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, __jsx(Card, {\n      news: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }));\n  }))), __jsx(\"div\", {\n    className: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, deepLoader && __jsx(Loader, {\n    style: {\n      marginTop: '20px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"card-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, loaderVa ? __jsx(Loader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }) : displayedScansVa.map(function (item, index) {\n    return __jsx(LazyLoad, {\n      key: index,\n      placeholder: __jsx(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, __jsx(CardVa, {\n      item: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }));\n  }))))));\n};\n\nexport default Scans;","map":{"version":3,"sources":["/Users/kevhoque/Documents/MyTest/myJapan/pages/scans.js"],"names":["React","useState","useEffect","debounce","LazyLoad","ParallaxProvider","ParallaxBanner","getScans","getScansVA","dateDiff","Loader","CardVa","Card","banner","Scans","pageToDisplay","nbToDisplay","setNbToDisplay","scans","setScans","scansVa","setScansVa","displayedScansVa","setDisplayedScansVa","hasMore","setHasMore","loader","setLoader","loaderVa","setLoaderVa","deepLoader","setDeepLoader","fetchScans","currentScans","fetchScansVa","flag","currentScansVa","slice","cache","JSON","parse","localStorage","getItem","Date","scansDate","min","scansVaDate","loadItems","currentNbToDisplay","length","window","onscroll","scroll","innerHeight","document","documentElement","scrollTop","offsetHeight","image","amount","height","map","item","index","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport debounce from \"lodash.debounce\";\nimport LazyLoad from 'react-lazyload';\nimport { ParallaxProvider } from 'react-scroll-parallax';\nimport { ParallaxBanner } from 'react-scroll-parallax';\nimport { getScans, getScansVA } from '../helpers/Scans'\nimport { dateDiff } from '../helpers/Shared'\nimport Loader from '../components/Loader/Loader'\nimport CardVa from '../components/Scans/CardVa'\nimport Card from '../components/Scans/Card'\nimport banner from '../assets/img/banner.jpg'\n\nconst Scans = () => {\n  const pageToDisplay = 12\n  const [nbToDisplay, setNbToDisplay] = useState(12)\n  const [scans, setScans] = useState([])\n  const [scansVa, setScansVa] = useState([])\n  const [displayedScansVa, setDisplayedScansVa] = useState([])\n  const [hasMore, setHasMore] = useState(true)\n  const [loader, setLoader] = useState(true)\n  const [loaderVa, setLoaderVa] = useState(true)\n  const [deepLoader, setDeepLoader] = useState(false)\n\n  useEffect(() => {\n    const fetchScans = async () => {\n      const currentScans = [...await getScans()]\n      setScans(currentScans)\n      setLoader(false)\n    }\n    const fetchScansVa = async (flag) => {\n      const currentScansVa = [...await getScansVA()]\n      setScansVa(currentScansVa)\n      setDisplayedScansVa(currentScansVa.slice(0, nbToDisplay))\n      setLoaderVa(false)\n      if(flag) {\n        setHasMore(true)\n        setDeepLoader(false)\n      }\n    }\n\n    const cache = JSON.parse(localStorage.getItem('cache'))\n    if (cache.scans) {\n      const currentScans = cache.scans\n      setScans(currentScans)\n      setLoader(false)\n      if (dateDiff(new Date(cache.scansDate), new Date()).min > 10)\n        fetchScans()\n    } else {\n      fetchScans()\n    }\n\n    if (cache.scansVa) {\n      const currentScansVa = cache.scansVa\n      setScansVa(currentScansVa)\n      setDisplayedScansVa(currentScansVa.slice(0, pageToDisplay))\n      setLoaderVa(false)\n      if (dateDiff(new Date(cache.scansVaDate), new Date()).min > 10) {\n        fetchScansVa(true)\n        setDeepLoader(true)\n      }\n    } else {\n      fetchScansVa()\n    }\n\n  }, [deepLoader, nbToDisplay]);\n\n  const loadItems = () => {\n    let currentNbToDisplay = displayedScansVa.length + pageToDisplay\n    if (currentNbToDisplay > scansVa.length) {\n      currentNbToDisplay = scansVa.length\n      setHasMore(false)\n    }\n    setNbToDisplay(currentNbToDisplay)\n    setDisplayedScansVa(scansVa.slice(0, currentNbToDisplay))\n  }\n\n  window.onscroll = debounce(() => {\n    if (!hasMore) return\n    let scroll = window.innerHeight + document.documentElement.scrollTop\n    if (scroll === document.documentElement.offsetHeight)\n      loadItems()\n  }, 100);\n\n  return (\n    <div className=\"Scans\">\n      <ParallaxProvider>\n        <ParallaxBanner className=\"homescreen banner\" layers={[{ image: banner, amount: 0.5 }]} style={{ height: '300px' }}>\n          <h1 className=\"title\">SCANS</h1>\n        </ParallaxBanner>\n        <div className=\"container\">\n          <div className=\"left\">\n            <div className=\"card-container\">\n              {loader ? <Loader /> :\n                scans.map((item, index) =>\n                  <LazyLoad key={index} placeholder={<Loader />}>\n                    <Card news={item} />\n                  </LazyLoad>\n                )\n              }\n            </div>\n          </div>\n          <div className=\"right\">\n            {deepLoader && <Loader style={{marginTop: '20px'}}/>}\n            <div className=\"card-container\">\n              {loaderVa ? <Loader /> :\n                displayedScansVa.map((item, index) =>\n                  <LazyLoad key={index} placeholder={<Loader />}>\n                    <CardVa item={item} />\n                  </LazyLoad>\n                )\n              }\n            </div>\n          </div>\n        </div>\n      </ParallaxProvider>\n    </div>\n  );\n}\n\nexport default Scans;\n"]},"metadata":{},"sourceType":"module"}