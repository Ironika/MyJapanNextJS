{"ast":null,"code":"var _jsxFileName = \"/Users/kevhoque/Documents/MyTest/myJapan/pages/news.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { getApiNews } from '../helpers/News';\nimport debounce from \"lodash.debounce\";\nimport { ParallaxProvider } from 'react-scroll-parallax';\nimport { ParallaxBanner } from 'react-scroll-parallax';\nimport Card from '../components/News/Card';\nimport Loader from '../components/Loader/Loader';\nimport banner from '../public/img/banner.jpg';\n\nconst News = () => {\n  const pageToDisplay = 12;\n  const {\n    0: news,\n    1: setNews\n  } = useState([]);\n  const {\n    0: displayedNews,\n    1: setDisplayedNews\n  } = useState([]);\n  const {\n    0: hasMore,\n    1: setHasMore\n  } = useState(true);\n  const {\n    0: loader,\n    1: setLoader\n  } = useState(true);\n  useEffect(() => {\n    window.onscroll = debounce(() => {\n      if (!hasMore) return;\n      let scroll = window.innerHeight + document.documentElement.scrollTop;\n      if (scroll === document.documentElement.offsetHeight) loadItems();\n    }, 100);\n  }, [displayedNews]);\n  useEffect(() => {\n    const fetchDatas = async () => {\n      const _news = await getApiNews();\n\n      setNews(_news);\n      setDisplayedNews(_news.slice(0, pageToDisplay));\n      setLoader(false);\n    };\n\n    fetchDatas();\n  }, []);\n\n  const loadItems = () => {\n    let nbToDisplay = displayedNews.length + pageToDisplay;\n\n    if (nbToDisplay > news.length) {\n      nbToDisplay = news.length;\n      setHasMore(false);\n    }\n\n    setDisplayedNews(news.slice(0, nbToDisplay));\n  };\n\n  return __jsx(\"div\", {\n    className: \"News\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, __jsx(ParallaxProvider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, __jsx(ParallaxBanner, {\n    className: \"homescreen banner\",\n    layers: [{\n      image: banner,\n      amount: 0.5\n    }],\n    style: {\n      height: '300px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"NEWS\")), __jsx(\"div\", {\n    className: \"card-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, loader ? __jsx(Loader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }) : displayedNews.map((item, index) => __jsx(Card, {\n    key: index,\n    news: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })))));\n};\n\nNews.getInitialProps = async context => {\n  if (context.req) {// const news = await getApiNews();\n    // return {news}\n  }\n\n  return {};\n};\n\nexport default News;","map":{"version":3,"sources":["/Users/kevhoque/Documents/MyTest/myJapan/pages/news.js"],"names":["React","useState","useEffect","getApiNews","debounce","ParallaxProvider","ParallaxBanner","Card","Loader","banner","News","pageToDisplay","news","setNews","displayedNews","setDisplayedNews","hasMore","setHasMore","loader","setLoader","window","onscroll","scroll","innerHeight","document","documentElement","scrollTop","offsetHeight","loadItems","fetchDatas","_news","slice","nbToDisplay","length","image","amount","height","map","item","index","getInitialProps","context","req"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getApiNews } from '../helpers/News'\nimport debounce from \"lodash.debounce\";\nimport { ParallaxProvider } from 'react-scroll-parallax';\nimport { ParallaxBanner } from 'react-scroll-parallax';\nimport Card from '../components/News/Card'\nimport Loader from '../components/Loader/Loader'\nimport banner from '../public/img/banner.jpg'\n\nconst News = () => {\n    const pageToDisplay = 12\n    const [news, setNews] = useState([])\n    const [displayedNews, setDisplayedNews] = useState([])\n    const [hasMore, setHasMore] = useState(true)\n    const [loader, setLoader] = useState(true)\n\n    useEffect(() => {\n        window.onscroll = debounce(() => {\n            if (!hasMore) return\n            let scroll = window.innerHeight + document.documentElement.scrollTop\n            if ( scroll === document.documentElement.offsetHeight)\n                loadItems()\n        }, 100);\n    }, [displayedNews])\n\n    useEffect(() => {\n        const fetchDatas = async () => {\n            const _news = await getApiNews()\n            setNews(_news)\n            setDisplayedNews(_news.slice(0, pageToDisplay))\n            setLoader(false)\n        }\n\n        fetchDatas()\n    }, []);\n\n    const loadItems = () => {\n        let nbToDisplay = displayedNews.length + pageToDisplay\n        if(nbToDisplay > news.length) {\n            nbToDisplay = news.length\n            setHasMore(false)\n        }\n        setDisplayedNews(news.slice(0, nbToDisplay))\n    }\n\n    return (\n        <div className=\"News\">\n            <ParallaxProvider>\n                <ParallaxBanner className=\"homescreen banner\" layers={[{ image: banner, amount: 0.5 }]} style={{ height: '300px' }}>\n                    <h1 className=\"title\">NEWS</h1>\n                </ParallaxBanner>\n                <div className=\"card-container\">\n                    {   loader ? <Loader /> :\n                        displayedNews.map((item, index) =>\n                            <Card key={index} news={item} />\n                        )\n                    }\n                </div>\n            </ParallaxProvider>\n        </div>\n    );\n}\n\nNews.getInitialProps = async (context) => {\n    if(context.req) {\n        // const news = await getApiNews();\n        // return {news}\n    }\n    return {}\n}\n\nexport default News;\n"]},"metadata":{},"sourceType":"module"}