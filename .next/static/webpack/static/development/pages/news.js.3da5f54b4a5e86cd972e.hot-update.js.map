{"version":3,"file":"static/webpack/static/development/pages/news.js.3da5f54b4a5e86cd972e.hot-update.js","sources":["webpack:///./pages/news.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getApiNews } from '../helpers/News'\nimport debounce from \"lodash.debounce\";\nimport { ParallaxProvider } from 'react-scroll-parallax';\nimport { ParallaxBanner } from 'react-scroll-parallax';\nimport Card from '../components/News/Card'\nimport Loader from '../components/Loader/Loader'\nimport banner from '../public/img/banner.jpg'\n\nconst News = () => {\n    const pageToDisplay = 12\n    const [news, setNews] = useState([])\n    const [displayedNews, setDisplayedNews] = useState([])\n    const [hasMore, setHasMore] = useState(true)\n    const [loader, setLoader] = useState(true)\n\n    useEffect(() => {\n        window.onscroll = debounce(() => {\n            if (!hasMore) return\n            let scroll = window.innerHeight + document.documentElement.scrollTop\n            if ( scroll === document.documentElement.offsetHeight)\n                loadItems()\n        }, 100);\n    }, [displayedNews])\n\n    useEffect(() => {\n        const fetchDatas = async () => {\n            const _news = await getApiNews()\n            setNews(_news)\n            setDisplayedNews(_news.slice(0, pageToDisplay))\n            setLoader(false)\n        }\n\n        fetchDatas()\n    }, []);\n\n    const loadItems = () => {\n        let nbToDisplay = displayedNews.length + pageToDisplay\n        if(nbToDisplay > news.length) {\n            nbToDisplay = news.length\n            setHasMore(false)\n        }\n        setDisplayedNews(news.slice(0, nbToDisplay))\n    }\n\n    return (\n        <div className=\"News\">\n            <ParallaxProvider>\n                <ParallaxBanner className=\"homescreen banner\" layers={[{ image: banner, amount: 0.5 }]} style={{ height: '300px' }}>\n                    <h1 className=\"title\">NEWS</h1>\n                </ParallaxBanner>\n                <div className=\"card-container\">\n                    {   loader ? <Loader /> :\n                        displayedNews.map((item, index) =>\n                            <Card key={index} news={item} />\n                        )\n                    }\n                </div>\n            </ParallaxProvider>\n        </div>\n    );\n}\n\nNews.getInitialProps = async (context) => {\n    if(context.req) {\n        // const news = await getApiNews();\n        // return {news}\n    }\n    return {}\n}\n\nexport default News;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAMA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAQA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AALA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;;;;A","sourceRoot":""}