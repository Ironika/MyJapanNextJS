{"ast":null,"code":"const axios = require('axios');\n\nconst accents = require('remove-accents');\n\nconst cheerio = require('cheerio');\n\nconst {\n  isInList\n} = require('./Shared');\n\nconst {\n  ANIME_SEIKOU,\n  UNIVERSANIMEIZ\n} = require('../rss');\n\nasync function getAnimes() {\n  let animes = [];\n  await getAnimeSeikou(animes);\n  await getUniversAnimeiz(animes);\n  animes.sort((a, b) => new Date(b.pubDate) - new Date(a.pubDate));\n  return animes;\n}\n\nasync function getAnimeSeikou(array) {\n  for (let i = 1; i <= 2; i++) {\n    let json = await axios.get(ANIME_SEIKOU + i + '/');\n    formatJsonAnimeSeikou(json, array);\n  }\n\n  return array;\n}\n\nasync function getUniversAnimeiz(array) {\n  for (let i = 1; i <= 2; i++) {\n    let json = await axios.get(UNIVERSANIMEIZ + i + '/');\n    formatJsonUniversAnimeiz(json, array);\n  }\n\n  return array;\n}\n\nfunction formatJsonAnimeSeikou(json, array) {\n  const $ = cheerio.load(json.data);\n  const items = $('.slide-entry');\n\n  for (let i = 0; i < items.length; i++) {\n    let title = $('.slide-entry > .hidden > span[itemprop=\"mainEntityOfPage\"] > span[itemprop=\"name\"]')[i].children[0].data;\n    title = title.replace('VOSTFR', '');\n    title = title.replace('vostfr', '');\n\n    if (isInList(title.toUpperCase(), 'animes')) {\n      let img = $('.slide-entry > .slide-image > img')[i].attribs.src;\n      let date = $('.slide-entry > .hidden > span[itemprop=\"datePublished\"]')[i].children[0].data;\n      let link = $('.slide-entry > .slide-image')[i].attribs.href;\n      let item = {\n        title: title,\n        link: link,\n        pubDate: new Date(date),\n        site: 'Anime Seikou',\n        img: img,\n        lang: 'VOSTFR'\n      };\n      if (!isInArray(item, array)) array.push(item);\n    }\n  }\n}\n\nfunction formatJsonUniversAnimeiz(json, array) {\n  const $ = cheerio.load(json.data);\n  const items = $('.post');\n\n  for (let i = 0; i < items.length; i++) {\n    let title = $('.post > .post-content > h2 > a')[i].children[0].data;\n    title = title.replace('VOSTFR', '');\n    title = title.replace('vostfr', '');\n\n    if (isInList(title.toUpperCase(), 'animes') && !title.includes('VF')) {\n      let episode = $('.post > .post-content > p')[i].children[0].data;\n      let img = $('.post > .post-thumb > a > img')[i].attribs.src;\n      let link = $('.post > .post-thumb > a')[i].attribs.href;\n      let date = $('.post > .post-content > .post-meta > .meta-date')[i].children[0].data;\n      let item = {\n        title: title + ' ' + episode.replace('Ã‰pisode ', ''),\n        link: link,\n        pubDate: new Date(accents.remove(date)),\n        site: 'Univers Animeiz',\n        img: img,\n        lang: 'VOSTFR'\n      };\n      if (!isInArray(item, array)) array.push(item);\n    }\n  }\n}\n\nfunction isInArray(item, array) {\n  let isInArray = false;\n\n  for (let anime of array) {\n    if (anime.title.includes(item.title)) return isInArray = true;\n  }\n\n  return isInArray;\n}\n\nmodule.exports = getAnimes;","map":{"version":3,"sources":["/Users/kevhoque/Documents/MyTest/myJapan/apiHelpers/Animes.js"],"names":["axios","require","accents","cheerio","isInList","ANIME_SEIKOU","UNIVERSANIMEIZ","getAnimes","animes","getAnimeSeikou","getUniversAnimeiz","sort","a","b","Date","pubDate","array","i","json","get","formatJsonAnimeSeikou","formatJsonUniversAnimeiz","$","load","data","items","length","title","children","replace","toUpperCase","img","attribs","src","date","link","href","item","site","lang","isInArray","push","includes","episode","remove","anime","module","exports"],"mappings":"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","sourcesContent":["const axios = require('axios');\nconst accents = require('remove-accents');\nconst cheerio = require('cheerio');\nconst { isInList } = require('./Shared');\nconst { ANIME_SEIKOU, UNIVERSANIMEIZ } = require('../rss');\n\nasync function getAnimes() {\n    let animes = []\n    await getAnimeSeikou(animes)\n    await getUniversAnimeiz(animes)\n\n    animes.sort((a, b) => new Date(b.pubDate) - new Date(a.pubDate))\n\n    return animes\n}\n\nasync function getAnimeSeikou(array) {\n    for(let i = 1; i <= 2; i++) {\n        let json = await axios.get(ANIME_SEIKOU + i + '/')\n        formatJsonAnimeSeikou(json, array)\n    }\n    return array\n}\n\nasync function getUniversAnimeiz(array) {\n    for(let i = 1; i <= 2; i++) {\n        let json = await axios.get(UNIVERSANIMEIZ + i + '/')\n        formatJsonUniversAnimeiz(json, array)\n    }\n    return array\n}\n\nfunction formatJsonAnimeSeikou(json, array) {\n    const $ = cheerio.load(json.data)\n    const items = $('.slide-entry')\n    for(let i = 0; i < items.length; i++) {\n        let title = $('.slide-entry > .hidden > span[itemprop=\"mainEntityOfPage\"] > span[itemprop=\"name\"]')[i].children[0].data\n        title = title.replace('VOSTFR', '')\n        title = title.replace('vostfr', '')\n        if(isInList(title.toUpperCase(), 'animes')) {\n            let img = $('.slide-entry > .slide-image > img')[i].attribs.src\n            let date = $('.slide-entry > .hidden > span[itemprop=\"datePublished\"]')[i].children[0].data\n            let link = $('.slide-entry > .slide-image')[i].attribs.href\n            let item = {\n                title: title,\n                link: link,\n                pubDate: new Date(date),\n                site: 'Anime Seikou',\n                img: img,\n                lang: 'VOSTFR'\n            }\n            if(!isInArray(item, array))\n                array.push(item)\n        }\n    }\n}\n\nfunction formatJsonUniversAnimeiz(json, array) {\n    const $ = cheerio.load(json.data)\n    const items = $('.post')\n    for(let i = 0; i < items.length; i++) {\n        let title = $('.post > .post-content > h2 > a')[i].children[0].data\n        title = title.replace('VOSTFR', '')\n        title = title.replace('vostfr', '')\n        if(isInList(title.toUpperCase(), 'animes') && !title.includes('VF')) {\n            let episode = $('.post > .post-content > p')[i].children[0].data\n            let img = $('.post > .post-thumb > a > img')[i].attribs.src\n            let link = $('.post > .post-thumb > a')[i].attribs.href\n            let date = $('.post > .post-content > .post-meta > .meta-date')[i].children[0].data\n            let item = {\n                title: title + ' ' + episode.replace('Ã‰pisode ', ''),\n                link: link,\n                pubDate: new Date(accents.remove(date)),\n                site: 'Univers Animeiz',\n                img: img,\n                lang: 'VOSTFR'\n            }\n            if(!isInArray(item, array))\n                array.push(item)\n        }\n    }\n}\n\nfunction isInArray(item, array) {\n    let isInArray = false\n    for(let anime of array){\n        if(anime.title.includes(item.title))\n            return isInArray = true\n    }\n    return isInArray\n}\n\nmodule.exports = getAnimes;"]},"metadata":{},"sourceType":"script"}